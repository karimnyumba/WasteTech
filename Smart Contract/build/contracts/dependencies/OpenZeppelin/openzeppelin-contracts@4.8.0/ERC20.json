{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "2": "/Users/rastabujo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC20/ERC20.sol",
    "3": "/Users/rastabujo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC20/IERC20.sol",
    "5": "/Users/rastabujo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC20/extensions/IERC20Metadata.sol",
    "6": "/Users/rastabujo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/utils/Context.sol"
  },
  "ast": {
    "absolutePath": "/Users/rastabujo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC20/ERC20.sol",
    "exportedSymbols": {
      "Context": [
        961
      ],
      "ERC20": [
        895
      ],
      "IERC20": [
        1039
      ],
      "IERC20Metadata": [
        1064
      ]
    },
    "id": 896,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 310,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "105:23:2"
      },
      {
        "absolutePath": "/Users/rastabujo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC20/IERC20.sol",
        "file": "./IERC20.sol",
        "id": 311,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 896,
        "sourceUnit": 1040,
        "src": "130:22:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/rastabujo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "file": "./extensions/IERC20Metadata.sol",
        "id": 312,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 896,
        "sourceUnit": 1065,
        "src": "153:41:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/rastabujo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/utils/Context.sol",
        "file": "../../utils/Context.sol",
        "id": 313,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 896,
        "sourceUnit": 962,
        "src": "195:33:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 315,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 961,
              "src": "1419:7:2"
            },
            "id": 316,
            "nodeType": "InheritanceSpecifier",
            "src": "1419:7:2"
          },
          {
            "baseName": {
              "id": 317,
              "name": "IERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1039,
              "src": "1428:6:2"
            },
            "id": 318,
            "nodeType": "InheritanceSpecifier",
            "src": "1428:6:2"
          },
          {
            "baseName": {
              "id": 319,
              "name": "IERC20Metadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1064,
              "src": "1436:14:2"
            },
            "id": 320,
            "nodeType": "InheritanceSpecifier",
            "src": "1436:14:2"
          }
        ],
        "canonicalName": "ERC20",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 314,
          "nodeType": "StructuredDocumentation",
          "src": "230:1170:2",
          "text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
        },
        "fullyImplemented": true,
        "id": 895,
        "linearizedBaseContracts": [
          895,
          1064,
          1039,
          961
        ],
        "name": "ERC20",
        "nameLocation": "1410:5:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 324,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "1493:9:2",
            "nodeType": "VariableDeclaration",
            "scope": 895,
            "src": "1457:45:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 323,
              "keyType": {
                "id": 321,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1465:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1457:27:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 322,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1476:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 330,
            "mutability": "mutable",
            "name": "_allowances",
            "nameLocation": "1565:11:2",
            "nodeType": "VariableDeclaration",
            "scope": 895,
            "src": "1509:67:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 329,
              "keyType": {
                "id": 325,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1517:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1509:47:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 328,
                "keyType": {
                  "id": 326,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1536:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1528:27:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 327,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1547:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 332,
            "mutability": "mutable",
            "name": "_totalSupply",
            "nameLocation": "1599:12:2",
            "nodeType": "VariableDeclaration",
            "scope": 895,
            "src": "1583:28:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 331,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1583:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 334,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "1633:5:2",
            "nodeType": "VariableDeclaration",
            "scope": 895,
            "src": "1618:20:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 333,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1618:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 336,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "1659:7:2",
            "nodeType": "VariableDeclaration",
            "scope": 895,
            "src": "1644:22:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 335,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1644:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 352,
              "nodeType": "Block",
              "src": "2032:57:2",
              "statements": [
                {
                  "expression": {
                    "id": 346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 344,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 334,
                      "src": "2042:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 345,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 339,
                      "src": "2050:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2042:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 347,
                  "nodeType": "ExpressionStatement",
                  "src": "2042:13:2"
                },
                {
                  "expression": {
                    "id": 350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 348,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 336,
                      "src": "2065:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 349,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 341,
                      "src": "2075:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2065:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 351,
                  "nodeType": "ExpressionStatement",
                  "src": "2065:17:2"
                }
              ]
            },
            "documentation": {
              "id": 337,
              "nodeType": "StructuredDocumentation",
              "src": "1673:298:2",
              "text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
            },
            "id": 353,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 342,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 339,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "2002:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 353,
                  "src": "1988:19:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 338,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1988:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 341,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "2023:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 353,
                  "src": "2009:21:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 340,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2009:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1987:44:2"
            },
            "returnParameters": {
              "id": 343,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2032:0:2"
            },
            "scope": 895,
            "src": "1976:113:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1051
            ],
            "body": {
              "id": 362,
              "nodeType": "Block",
              "src": "2223:29:2",
              "statements": [
                {
                  "expression": {
                    "id": 360,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 334,
                    "src": "2240:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 359,
                  "id": 361,
                  "nodeType": "Return",
                  "src": "2233:12:2"
                }
              ]
            },
            "documentation": {
              "id": 354,
              "nodeType": "StructuredDocumentation",
              "src": "2095:54:2",
              "text": " @dev Returns the name of the token."
            },
            "functionSelector": "06fdde03",
            "id": 363,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "2163:4:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 356,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2190:8:2"
            },
            "parameters": {
              "id": 355,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2167:2:2"
            },
            "returnParameters": {
              "id": 359,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 358,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 363,
                  "src": "2208:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 357,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2208:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2207:15:2"
            },
            "scope": 895,
            "src": "2154:98:2",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1057
            ],
            "body": {
              "id": 372,
              "nodeType": "Block",
              "src": "2436:31:2",
              "statements": [
                {
                  "expression": {
                    "id": 370,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 336,
                    "src": "2453:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 369,
                  "id": 371,
                  "nodeType": "Return",
                  "src": "2446:14:2"
                }
              ]
            },
            "documentation": {
              "id": 364,
              "nodeType": "StructuredDocumentation",
              "src": "2258:102:2",
              "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
            },
            "functionSelector": "95d89b41",
            "id": 373,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "2374:6:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 366,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2403:8:2"
            },
            "parameters": {
              "id": 365,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2380:2:2"
            },
            "returnParameters": {
              "id": 369,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 368,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 373,
                  "src": "2421:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 367,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2421:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2420:15:2"
            },
            "scope": 895,
            "src": "2365:102:2",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1063
            ],
            "body": {
              "id": 382,
              "nodeType": "Block",
              "src": "3156:26:2",
              "statements": [
                {
                  "expression": {
                    "hexValue": "3138",
                    "id": 380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3173:2:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  },
                  "functionReturnParameters": 379,
                  "id": 381,
                  "nodeType": "Return",
                  "src": "3166:9:2"
                }
              ]
            },
            "documentation": {
              "id": 374,
              "nodeType": "StructuredDocumentation",
              "src": "2473:613:2",
              "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
            },
            "functionSelector": "313ce567",
            "id": 383,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "3100:8:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 376,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3131:8:2"
            },
            "parameters": {
              "id": 375,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3108:2:2"
            },
            "returnParameters": {
              "id": 379,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 378,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 383,
                  "src": "3149:5:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 377,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3149:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3148:7:2"
            },
            "scope": 895,
            "src": "3091:91:2",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              988
            ],
            "body": {
              "id": 392,
              "nodeType": "Block",
              "src": "3312:36:2",
              "statements": [
                {
                  "expression": {
                    "id": 390,
                    "name": "_totalSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 332,
                    "src": "3329:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 389,
                  "id": 391,
                  "nodeType": "Return",
                  "src": "3322:19:2"
                }
              ]
            },
            "documentation": {
              "id": 384,
              "nodeType": "StructuredDocumentation",
              "src": "3188:49:2",
              "text": " @dev See {IERC20-totalSupply}."
            },
            "functionSelector": "18160ddd",
            "id": 393,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "3251:11:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 386,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3285:8:2"
            },
            "parameters": {
              "id": 385,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3262:2:2"
            },
            "returnParameters": {
              "id": 389,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 388,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 393,
                  "src": "3303:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 387,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3303:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3302:9:2"
            },
            "scope": 895,
            "src": "3242:106:2",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              996
            ],
            "body": {
              "id": 406,
              "nodeType": "Block",
              "src": "3489:42:2",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 402,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 324,
                      "src": "3506:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 404,
                    "indexExpression": {
                      "id": 403,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 396,
                      "src": "3516:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3506:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 401,
                  "id": 405,
                  "nodeType": "Return",
                  "src": "3499:25:2"
                }
              ]
            },
            "documentation": {
              "id": 394,
              "nodeType": "StructuredDocumentation",
              "src": "3354:47:2",
              "text": " @dev See {IERC20-balanceOf}."
            },
            "functionSelector": "70a08231",
            "id": 407,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "3415:9:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 398,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3462:8:2"
            },
            "parameters": {
              "id": 397,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 396,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3433:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 407,
                  "src": "3425:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 395,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3425:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3424:17:2"
            },
            "returnParameters": {
              "id": 401,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 400,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 407,
                  "src": "3480:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 399,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3480:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3479:9:2"
            },
            "scope": 895,
            "src": "3406:125:2",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1006
            ],
            "body": {
              "id": 431,
              "nodeType": "Block",
              "src": "3812:104:2",
              "statements": [
                {
                  "assignments": [
                    419
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 419,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "3830:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 431,
                      "src": "3822:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 418,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3822:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 422,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 420,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 951,
                      "src": "3838:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3838:12:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3822:28:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 424,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 419,
                        "src": "3870:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 425,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 410,
                        "src": "3877:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 426,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 412,
                        "src": "3881:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 423,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 655,
                      "src": "3860:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3860:28:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 428,
                  "nodeType": "ExpressionStatement",
                  "src": "3860:28:2"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3905:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 417,
                  "id": 430,
                  "nodeType": "Return",
                  "src": "3898:11:2"
                }
              ]
            },
            "documentation": {
              "id": 408,
              "nodeType": "StructuredDocumentation",
              "src": "3537:185:2",
              "text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
            },
            "functionSelector": "a9059cbb",
            "id": 432,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "3736:8:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 414,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3788:8:2"
            },
            "parameters": {
              "id": 413,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 410,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3753:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 432,
                  "src": "3745:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 409,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3745:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 412,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3765:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 432,
                  "src": "3757:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 411,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3757:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3744:28:2"
            },
            "returnParameters": {
              "id": 417,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 416,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 432,
                  "src": "3806:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 415,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3806:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3805:6:2"
            },
            "scope": 895,
            "src": "3727:189:2",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1016
            ],
            "body": {
              "id": 449,
              "nodeType": "Block",
              "src": "4072:51:2",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 443,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 330,
                        "src": "4089:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 445,
                      "indexExpression": {
                        "id": 444,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 435,
                        "src": "4101:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4089:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 447,
                    "indexExpression": {
                      "id": 446,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 437,
                      "src": "4108:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4089:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 442,
                  "id": 448,
                  "nodeType": "Return",
                  "src": "4082:34:2"
                }
              ]
            },
            "documentation": {
              "id": 433,
              "nodeType": "StructuredDocumentation",
              "src": "3922:47:2",
              "text": " @dev See {IERC20-allowance}."
            },
            "functionSelector": "dd62ed3e",
            "id": 450,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nameLocation": "3983:9:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 439,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4045:8:2"
            },
            "parameters": {
              "id": 438,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 435,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "4001:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 450,
                  "src": "3993:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 434,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3993:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 437,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "4016:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 450,
                  "src": "4008:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 436,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4008:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3992:32:2"
            },
            "returnParameters": {
              "id": 442,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 441,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 450,
                  "src": "4063:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 440,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4063:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4062:9:2"
            },
            "scope": 895,
            "src": "3974:149:2",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1026
            ],
            "body": {
              "id": 474,
              "nodeType": "Block",
              "src": "4520:108:2",
              "statements": [
                {
                  "assignments": [
                    462
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 462,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "4538:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 474,
                      "src": "4530:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 461,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4530:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 465,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 463,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 951,
                      "src": "4546:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4546:12:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4530:28:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 467,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 462,
                        "src": "4577:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 468,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 453,
                        "src": "4584:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 469,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 455,
                        "src": "4593:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 466,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 829,
                      "src": "4568:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4568:32:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 471,
                  "nodeType": "ExpressionStatement",
                  "src": "4568:32:2"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4617:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 460,
                  "id": 473,
                  "nodeType": "Return",
                  "src": "4610:11:2"
                }
              ]
            },
            "documentation": {
              "id": 451,
              "nodeType": "StructuredDocumentation",
              "src": "4129:297:2",
              "text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
            },
            "functionSelector": "095ea7b3",
            "id": 475,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "4440:7:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 457,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4496:8:2"
            },
            "parameters": {
              "id": 456,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 453,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "4456:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 475,
                  "src": "4448:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 452,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4448:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 455,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4473:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 475,
                  "src": "4465:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 454,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4465:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4447:33:2"
            },
            "returnParameters": {
              "id": 460,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 459,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 475,
                  "src": "4514:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 458,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4514:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4513:6:2"
            },
            "scope": 895,
            "src": "4431:197:2",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1038
            ],
            "body": {
              "id": 507,
              "nodeType": "Block",
              "src": "5323:153:2",
              "statements": [
                {
                  "assignments": [
                    489
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 489,
                      "mutability": "mutable",
                      "name": "spender",
                      "nameLocation": "5341:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 507,
                      "src": "5333:15:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 488,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5333:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 492,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 490,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 951,
                      "src": "5351:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5351:12:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5333:30:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 494,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 478,
                        "src": "5389:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 495,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 489,
                        "src": "5395:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 496,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 482,
                        "src": "5404:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 493,
                      "name": "_spendAllowance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 872,
                      "src": "5373:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5373:38:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 498,
                  "nodeType": "ExpressionStatement",
                  "src": "5373:38:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 500,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 478,
                        "src": "5431:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 501,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 480,
                        "src": "5437:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 502,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 482,
                        "src": "5441:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 499,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 655,
                      "src": "5421:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5421:27:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 504,
                  "nodeType": "ExpressionStatement",
                  "src": "5421:27:2"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5465:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 487,
                  "id": 506,
                  "nodeType": "Return",
                  "src": "5458:11:2"
                }
              ]
            },
            "documentation": {
              "id": 476,
              "nodeType": "StructuredDocumentation",
              "src": "4634:551:2",
              "text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
            },
            "functionSelector": "23b872dd",
            "id": 508,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "5199:12:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 484,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5299:8:2"
            },
            "parameters": {
              "id": 483,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 478,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5229:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 508,
                  "src": "5221:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 477,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5221:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 480,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5251:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 508,
                  "src": "5243:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 479,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5243:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 482,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5271:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 508,
                  "src": "5263:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 481,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5263:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5211:72:2"
            },
            "returnParameters": {
              "id": 487,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 486,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 508,
                  "src": "5317:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 485,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5317:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5316:6:2"
            },
            "scope": 895,
            "src": "5190:286:2",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 536,
              "nodeType": "Block",
              "src": "5965:140:2",
              "statements": [
                {
                  "assignments": [
                    519
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 519,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "5983:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 536,
                      "src": "5975:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 518,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5975:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 522,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 520,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 951,
                      "src": "5991:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5991:12:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5975:28:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 524,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 519,
                        "src": "6022:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 525,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 511,
                        "src": "6029:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 531,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 527,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 519,
                              "src": "6048:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 528,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 511,
                              "src": "6055:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 526,
                            "name": "allowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 450,
                            "src": "6038:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view returns (uint256)"
                            }
                          },
                          "id": 529,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6038:25:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 530,
                          "name": "addedValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 513,
                          "src": "6066:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6038:38:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 523,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 829,
                      "src": "6013:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6013:64:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 533,
                  "nodeType": "ExpressionStatement",
                  "src": "6013:64:2"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6094:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 517,
                  "id": 535,
                  "nodeType": "Return",
                  "src": "6087:11:2"
                }
              ]
            },
            "documentation": {
              "id": 509,
              "nodeType": "StructuredDocumentation",
              "src": "5482:384:2",
              "text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
            },
            "functionSelector": "39509351",
            "id": 537,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increaseAllowance",
            "nameLocation": "5880:17:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 514,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 511,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "5906:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 537,
                  "src": "5898:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 510,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5898:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 513,
                  "mutability": "mutable",
                  "name": "addedValue",
                  "nameLocation": "5923:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 537,
                  "src": "5915:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 512,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5915:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5897:37:2"
            },
            "returnParameters": {
              "id": 517,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 516,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 537,
                  "src": "5959:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 515,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5959:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5958:6:2"
            },
            "scope": 895,
            "src": "5871:234:2",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 577,
              "nodeType": "Block",
              "src": "6691:328:2",
              "statements": [
                {
                  "assignments": [
                    548
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 548,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "6709:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 577,
                      "src": "6701:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 547,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6701:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 551,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 549,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 951,
                      "src": "6717:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6717:12:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6701:28:2"
                },
                {
                  "assignments": [
                    553
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 553,
                      "mutability": "mutable",
                      "name": "currentAllowance",
                      "nameLocation": "6747:16:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 577,
                      "src": "6739:24:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 552,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6739:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 558,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 555,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 548,
                        "src": "6776:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 556,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 540,
                        "src": "6783:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 554,
                      "name": "allowance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 450,
                      "src": "6766:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view returns (uint256)"
                      }
                    },
                    "id": 557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6766:25:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6739:52:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 562,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 560,
                          "name": "currentAllowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 553,
                          "src": "6809:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 561,
                          "name": "subtractedValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 542,
                          "src": "6829:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6809:35:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
                        "id": 563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6846:39:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                          "typeString": "literal_string \"ERC20: decreased allowance below zero\""
                        },
                        "value": "ERC20: decreased allowance below zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                          "typeString": "literal_string \"ERC20: decreased allowance below zero\""
                        }
                      ],
                      "id": 559,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6801:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6801:85:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 565,
                  "nodeType": "ExpressionStatement",
                  "src": "6801:85:2"
                },
                {
                  "id": 574,
                  "nodeType": "UncheckedBlock",
                  "src": "6896:95:2",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 567,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 548,
                            "src": "6929:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 568,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 540,
                            "src": "6936:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 571,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 569,
                              "name": "currentAllowance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 553,
                              "src": "6945:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 570,
                              "name": "subtractedValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 542,
                              "src": "6964:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6945:34:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 566,
                          "name": "_approve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 829,
                          "src": "6920:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 572,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6920:60:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 573,
                      "nodeType": "ExpressionStatement",
                      "src": "6920:60:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7008:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 546,
                  "id": 576,
                  "nodeType": "Return",
                  "src": "7001:11:2"
                }
              ]
            },
            "documentation": {
              "id": 538,
              "nodeType": "StructuredDocumentation",
              "src": "6111:476:2",
              "text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
            },
            "functionSelector": "a457c2d7",
            "id": 578,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decreaseAllowance",
            "nameLocation": "6601:17:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 543,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 540,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "6627:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 578,
                  "src": "6619:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 539,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6619:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 542,
                  "mutability": "mutable",
                  "name": "subtractedValue",
                  "nameLocation": "6644:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 578,
                  "src": "6636:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 541,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6636:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6618:42:2"
            },
            "returnParameters": {
              "id": 546,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 545,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 578,
                  "src": "6685:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 544,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6685:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6684:6:2"
            },
            "scope": 895,
            "src": "6592:427:2",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 654,
              "nodeType": "Block",
              "src": "7581:710:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 589,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 581,
                          "src": "7599:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 592,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7615:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 591,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7607:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 590,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7607:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 593,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7607:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7599:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
                        "id": 595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7619:39:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                          "typeString": "literal_string \"ERC20: transfer from the zero address\""
                        },
                        "value": "ERC20: transfer from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                          "typeString": "literal_string \"ERC20: transfer from the zero address\""
                        }
                      ],
                      "id": 588,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7591:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7591:68:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 597,
                  "nodeType": "ExpressionStatement",
                  "src": "7591:68:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 604,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 599,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 583,
                          "src": "7677:2:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 602,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7691:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 601,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7683:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 600,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7683:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 603,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7683:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7677:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7695:37:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        },
                        "value": "ERC20: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        }
                      ],
                      "id": 598,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7669:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7669:64:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 607,
                  "nodeType": "ExpressionStatement",
                  "src": "7669:64:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 609,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 581,
                        "src": "7765:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 610,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 583,
                        "src": "7771:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 611,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 585,
                        "src": "7775:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 608,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 883,
                      "src": "7744:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7744:38:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 613,
                  "nodeType": "ExpressionStatement",
                  "src": "7744:38:2"
                },
                {
                  "assignments": [
                    615
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 615,
                      "mutability": "mutable",
                      "name": "fromBalance",
                      "nameLocation": "7801:11:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 654,
                      "src": "7793:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 614,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7793:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 619,
                  "initialValue": {
                    "baseExpression": {
                      "id": 616,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 324,
                      "src": "7815:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 618,
                    "indexExpression": {
                      "id": 617,
                      "name": "from",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 581,
                      "src": "7825:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7815:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7793:37:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 621,
                          "name": "fromBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 615,
                          "src": "7848:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 622,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 585,
                          "src": "7863:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7848:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
                        "id": 624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7871:40:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                        },
                        "value": "ERC20: transfer amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                        }
                      ],
                      "id": 620,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7840:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7840:72:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 626,
                  "nodeType": "ExpressionStatement",
                  "src": "7840:72:2"
                },
                {
                  "id": 641,
                  "nodeType": "UncheckedBlock",
                  "src": "7922:273:2",
                  "statements": [
                    {
                      "expression": {
                        "id": 633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 627,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 324,
                            "src": "7946:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 629,
                          "indexExpression": {
                            "id": 628,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 581,
                            "src": "7956:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "7946:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 632,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 630,
                            "name": "fromBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 615,
                            "src": "7964:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 631,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 585,
                            "src": "7978:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7964:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7946:38:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 634,
                      "nodeType": "ExpressionStatement",
                      "src": "7946:38:2"
                    },
                    {
                      "expression": {
                        "id": 639,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 635,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 324,
                            "src": "8161:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 637,
                          "indexExpression": {
                            "id": 636,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 583,
                            "src": "8171:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "8161:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "+=",
                        "rightHandSide": {
                          "id": 638,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 585,
                          "src": "8178:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8161:23:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 640,
                      "nodeType": "ExpressionStatement",
                      "src": "8161:23:2"
                    }
                  ]
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 643,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 581,
                        "src": "8219:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 644,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 583,
                        "src": "8225:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 645,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 585,
                        "src": "8229:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 642,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 973,
                      "src": "8210:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8210:26:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 647,
                  "nodeType": "EmitStatement",
                  "src": "8205:31:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 649,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 581,
                        "src": "8267:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 650,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 583,
                        "src": "8273:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 651,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 585,
                        "src": "8277:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 648,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 894,
                      "src": "8247:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8247:37:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 653,
                  "nodeType": "ExpressionStatement",
                  "src": "8247:37:2"
                }
              ]
            },
            "documentation": {
              "id": 579,
              "nodeType": "StructuredDocumentation",
              "src": "7025:443:2",
              "text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
            },
            "id": 655,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "7482:9:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 586,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 581,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "7509:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 655,
                  "src": "7501:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 580,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7501:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 583,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "7531:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 655,
                  "src": "7523:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 582,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7523:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 585,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7551:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 655,
                  "src": "7543:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 584,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7543:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7491:72:2"
            },
            "returnParameters": {
              "id": 587,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7581:0:2"
            },
            "scope": 895,
            "src": "7473:818:2",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 711,
              "nodeType": "Block",
              "src": "8632:470:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 669,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 664,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 658,
                          "src": "8650:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 667,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8669:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 666,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8661:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 665,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8661:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 668,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8661:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8650:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 670,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8673:33:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                          "typeString": "literal_string \"ERC20: mint to the zero address\""
                        },
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                          "typeString": "literal_string \"ERC20: mint to the zero address\""
                        }
                      ],
                      "id": 663,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8642:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8642:65:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 672,
                  "nodeType": "ExpressionStatement",
                  "src": "8642:65:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 676,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8747:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 675,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8739:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 674,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8739:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 677,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8739:10:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 678,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 658,
                        "src": "8751:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 679,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 660,
                        "src": "8760:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 673,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 883,
                      "src": "8718:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8718:49:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 681,
                  "nodeType": "ExpressionStatement",
                  "src": "8718:49:2"
                },
                {
                  "expression": {
                    "id": 684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 682,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 332,
                      "src": "8778:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 683,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 660,
                      "src": "8794:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8778:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 685,
                  "nodeType": "ExpressionStatement",
                  "src": "8778:22:2"
                },
                {
                  "id": 692,
                  "nodeType": "UncheckedBlock",
                  "src": "8810:175:2",
                  "statements": [
                    {
                      "expression": {
                        "id": 690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 686,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 324,
                            "src": "8946:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 688,
                          "indexExpression": {
                            "id": 687,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 658,
                            "src": "8956:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "8946:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "+=",
                        "rightHandSide": {
                          "id": 689,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 660,
                          "src": "8968:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8946:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 691,
                      "nodeType": "ExpressionStatement",
                      "src": "8946:28:2"
                    }
                  ]
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 696,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9016:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 695,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9008:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 694,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9008:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9008:10:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 698,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 658,
                        "src": "9020:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 699,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 660,
                        "src": "9029:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 693,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 973,
                      "src": "8999:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8999:37:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 701,
                  "nodeType": "EmitStatement",
                  "src": "8994:42:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 705,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9075:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 704,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9067:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 703,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9067:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 706,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9067:10:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 707,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 658,
                        "src": "9079:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 708,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 660,
                        "src": "9088:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 702,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 894,
                      "src": "9047:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9047:48:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 710,
                  "nodeType": "ExpressionStatement",
                  "src": "9047:48:2"
                }
              ]
            },
            "documentation": {
              "id": 656,
              "nodeType": "StructuredDocumentation",
              "src": "8297:265:2",
              "text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
            },
            "id": 712,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "8576:5:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 661,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 658,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "8590:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 712,
                  "src": "8582:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 657,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8582:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 660,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8607:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 712,
                  "src": "8599:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 659,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8599:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8581:33:2"
            },
            "returnParameters": {
              "id": 662,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8632:0:2"
            },
            "scope": 895,
            "src": "8567:535:2",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 783,
              "nodeType": "Block",
              "src": "9487:594:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 726,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 721,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 715,
                          "src": "9505:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 724,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9524:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 723,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9516:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 722,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9516:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 725,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9516:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9505:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
                        "id": 727,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9528:35:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                          "typeString": "literal_string \"ERC20: burn from the zero address\""
                        },
                        "value": "ERC20: burn from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                          "typeString": "literal_string \"ERC20: burn from the zero address\""
                        }
                      ],
                      "id": 720,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9497:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9497:67:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 729,
                  "nodeType": "ExpressionStatement",
                  "src": "9497:67:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 731,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 715,
                        "src": "9596:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 734,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9613:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9605:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 732,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9605:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 735,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9605:10:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 736,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 717,
                        "src": "9617:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 730,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 883,
                      "src": "9575:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9575:49:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 738,
                  "nodeType": "ExpressionStatement",
                  "src": "9575:49:2"
                },
                {
                  "assignments": [
                    740
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 740,
                      "mutability": "mutable",
                      "name": "accountBalance",
                      "nameLocation": "9643:14:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 783,
                      "src": "9635:22:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 739,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9635:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 744,
                  "initialValue": {
                    "baseExpression": {
                      "id": 741,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 324,
                      "src": "9660:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 743,
                    "indexExpression": {
                      "id": 742,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 715,
                      "src": "9670:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9660:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9635:43:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 746,
                          "name": "accountBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 740,
                          "src": "9696:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 747,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 717,
                          "src": "9714:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9696:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
                        "id": 749,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9722:36:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                          "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                        },
                        "value": "ERC20: burn amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                          "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                        }
                      ],
                      "id": 745,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9688:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9688:71:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 751,
                  "nodeType": "ExpressionStatement",
                  "src": "9688:71:2"
                },
                {
                  "id": 764,
                  "nodeType": "UncheckedBlock",
                  "src": "9769:194:2",
                  "statements": [
                    {
                      "expression": {
                        "id": 758,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 752,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 324,
                            "src": "9793:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 754,
                          "indexExpression": {
                            "id": 753,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 715,
                            "src": "9803:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "9793:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 757,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 755,
                            "name": "accountBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 740,
                            "src": "9814:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 756,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 717,
                            "src": "9831:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9814:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9793:44:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 759,
                      "nodeType": "ExpressionStatement",
                      "src": "9793:44:2"
                    },
                    {
                      "expression": {
                        "id": 762,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 760,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 332,
                          "src": "9930:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "-=",
                        "rightHandSide": {
                          "id": 761,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 717,
                          "src": "9946:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9930:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 763,
                      "nodeType": "ExpressionStatement",
                      "src": "9930:22:2"
                    }
                  ]
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 766,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 715,
                        "src": "9987:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 769,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10004:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 768,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9996:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 767,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9996:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 770,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9996:10:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 771,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 717,
                        "src": "10008:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 765,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 973,
                      "src": "9978:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9978:37:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 773,
                  "nodeType": "EmitStatement",
                  "src": "9973:42:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 775,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 715,
                        "src": "10046:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 778,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10063:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 777,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10055:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 776,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10055:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 779,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10055:10:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 780,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 717,
                        "src": "10067:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 774,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 894,
                      "src": "10026:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10026:48:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 782,
                  "nodeType": "ExpressionStatement",
                  "src": "10026:48:2"
                }
              ]
            },
            "documentation": {
              "id": 713,
              "nodeType": "StructuredDocumentation",
              "src": "9108:309:2",
              "text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
            },
            "id": 784,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "9431:5:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 718,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 715,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "9445:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 784,
                  "src": "9437:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 714,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9437:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 717,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "9462:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 784,
                  "src": "9454:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 716,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9454:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9436:33:2"
            },
            "returnParameters": {
              "id": 719,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9487:0:2"
            },
            "scope": 895,
            "src": "9422:659:2",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 828,
              "nodeType": "Block",
              "src": "10617:257:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 795,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 787,
                          "src": "10635:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 798,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10652:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 797,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10644:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 796,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10644:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 799,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10644:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10635:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
                        "id": 801,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10656:38:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                          "typeString": "literal_string \"ERC20: approve from the zero address\""
                        },
                        "value": "ERC20: approve from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                          "typeString": "literal_string \"ERC20: approve from the zero address\""
                        }
                      ],
                      "id": 794,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10627:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 802,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10627:68:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 803,
                  "nodeType": "ExpressionStatement",
                  "src": "10627:68:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 810,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 805,
                          "name": "spender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 789,
                          "src": "10713:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 808,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10732:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 807,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10724:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 806,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10724:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 809,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10724:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10713:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
                        "id": 811,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10736:36:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                          "typeString": "literal_string \"ERC20: approve to the zero address\""
                        },
                        "value": "ERC20: approve to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                          "typeString": "literal_string \"ERC20: approve to the zero address\""
                        }
                      ],
                      "id": 804,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10705:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10705:68:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 813,
                  "nodeType": "ExpressionStatement",
                  "src": "10705:68:2"
                },
                {
                  "expression": {
                    "id": 820,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 814,
                          "name": "_allowances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 330,
                          "src": "10784:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 817,
                        "indexExpression": {
                          "id": 815,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 787,
                          "src": "10796:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10784:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 818,
                      "indexExpression": {
                        "id": 816,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 789,
                        "src": "10803:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10784:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 819,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 791,
                      "src": "10814:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10784:36:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 821,
                  "nodeType": "ExpressionStatement",
                  "src": "10784:36:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 823,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 787,
                        "src": "10844:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 824,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 789,
                        "src": "10851:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 825,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 791,
                        "src": "10860:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 822,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 982,
                      "src": "10835:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10835:32:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 827,
                  "nodeType": "EmitStatement",
                  "src": "10830:37:2"
                }
              ]
            },
            "documentation": {
              "id": 785,
              "nodeType": "StructuredDocumentation",
              "src": "10087:412:2",
              "text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
            },
            "id": 829,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nameLocation": "10513:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 792,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 787,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "10539:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 829,
                  "src": "10531:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 786,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10531:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 789,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "10562:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 829,
                  "src": "10554:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 788,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10554:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 791,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "10587:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 829,
                  "src": "10579:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 790,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10579:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10521:78:2"
            },
            "returnParameters": {
              "id": 793,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10617:0:2"
            },
            "scope": 895,
            "src": "10504:370:2",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 871,
              "nodeType": "Block",
              "src": "11275:321:2",
              "statements": [
                {
                  "assignments": [
                    840
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 840,
                      "mutability": "mutable",
                      "name": "currentAllowance",
                      "nameLocation": "11293:16:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 871,
                      "src": "11285:24:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 839,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11285:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 845,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 842,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 832,
                        "src": "11322:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 843,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 834,
                        "src": "11329:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 841,
                      "name": "allowance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 450,
                      "src": "11312:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view returns (uint256)"
                      }
                    },
                    "id": 844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11312:25:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11285:52:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 846,
                      "name": "currentAllowance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 840,
                      "src": "11351:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 849,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11376:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 848,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11376:7:2",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            }
                          ],
                          "id": 847,
                          "name": "type",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -27,
                          "src": "11371:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 850,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11371:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_meta_type_t_uint256",
                          "typeString": "type(uint256)"
                        }
                      },
                      "id": 851,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "max",
                      "nodeType": "MemberAccess",
                      "src": "11371:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11351:37:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 870,
                  "nodeType": "IfStatement",
                  "src": "11347:243:2",
                  "trueBody": {
                    "id": 869,
                    "nodeType": "Block",
                    "src": "11390:200:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 856,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 854,
                                "name": "currentAllowance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 840,
                                "src": "11412:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 855,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 836,
                                "src": "11432:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "11412:26:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
                              "id": 857,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11440:31:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
                                "typeString": "literal_string \"ERC20: insufficient allowance\""
                              },
                              "value": "ERC20: insufficient allowance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
                                "typeString": "literal_string \"ERC20: insufficient allowance\""
                              }
                            ],
                            "id": 853,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "11404:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11404:68:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 859,
                        "nodeType": "ExpressionStatement",
                        "src": "11404:68:2"
                      },
                      {
                        "id": 868,
                        "nodeType": "UncheckedBlock",
                        "src": "11486:94:2",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 861,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 832,
                                  "src": "11523:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 862,
                                  "name": "spender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 834,
                                  "src": "11530:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 865,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 863,
                                    "name": "currentAllowance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 840,
                                    "src": "11539:16:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 864,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 836,
                                    "src": "11558:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "11539:25:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 860,
                                "name": "_approve",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 829,
                                "src": "11514:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                  "typeString": "function (address,address,uint256)"
                                }
                              },
                              "id": 866,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11514:51:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 867,
                            "nodeType": "ExpressionStatement",
                            "src": "11514:51:2"
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 830,
              "nodeType": "StructuredDocumentation",
              "src": "10880:270:2",
              "text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
            },
            "id": 872,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_spendAllowance",
            "nameLocation": "11164:15:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 837,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 832,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "11197:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 872,
                  "src": "11189:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 831,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11189:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 834,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "11220:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 872,
                  "src": "11212:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 833,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11212:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 836,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "11245:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 872,
                  "src": "11237:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 835,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11237:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11179:78:2"
            },
            "returnParameters": {
              "id": 838,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11275:0:2"
            },
            "scope": 895,
            "src": "11155:441:2",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 882,
              "nodeType": "Block",
              "src": "12299:2:2",
              "statements": []
            },
            "documentation": {
              "id": 873,
              "nodeType": "StructuredDocumentation",
              "src": "11602:573:2",
              "text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 883,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "12189:20:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 880,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 875,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "12227:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 883,
                  "src": "12219:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 874,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12219:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 877,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "12249:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 883,
                  "src": "12241:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 876,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12241:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 879,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "12269:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 883,
                  "src": "12261:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 878,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12261:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12209:72:2"
            },
            "returnParameters": {
              "id": 881,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12299:0:2"
            },
            "scope": 895,
            "src": "12180:121:2",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 893,
              "nodeType": "Block",
              "src": "13007:2:2",
              "statements": []
            },
            "documentation": {
              "id": 884,
              "nodeType": "StructuredDocumentation",
              "src": "12307:577:2",
              "text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 894,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterTokenTransfer",
            "nameLocation": "12898:19:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 891,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 886,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "12935:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 894,
                  "src": "12927:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 885,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12927:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 888,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "12957:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 894,
                  "src": "12949:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 887,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12949:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 890,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "12977:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 894,
                  "src": "12969:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 889,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12969:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12917:72:2"
            },
            "returnParameters": {
              "id": 892,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13007:0:2"
            },
            "scope": 895,
            "src": "12889:120:2",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 896,
        "src": "1401:11610:2",
        "usedErrors": []
      }
    ],
    "src": "105:12907:2"
  },
  "bytecode": "60806040523480156200001157600080fd5b5060405162000aed38038062000aed8339810160408190526200003491620001db565b81516200004990600390602085019062000068565b5080516200005f90600490602084019062000068565b50505062000281565b828054620000769062000245565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013657600080fd5b81516001600160401b03808211156200015357620001536200010e565b604051601f8301601f19908116603f011681019082821181831017156200017e576200017e6200010e565b816040528381526020925086838588010111156200019b57600080fd5b600091505b83821015620001bf5785820183015181830184015290820190620001a0565b83821115620001d15760008385830101525b9695505050505050565b60008060408385031215620001ef57600080fd5b82516001600160401b03808211156200020757600080fd5b620002158683870162000124565b935060208501519150808211156200022c57600080fd5b506200023b8582860162000124565b9150509250929050565b600181811c908216806200025a57607f821691505b6020821081036200027b57634e487b7160e01b600052602260045260246000fd5b50919050565b61085c80620002916000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c3919061069a565b60405180910390f35b6100df6100da36600461070b565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610735565b61024a565b604051601281526020016100c3565b6100df61013136600461070b565b61026e565b6100f3610144366004610771565b6001600160a01b031660009081526020819052604090205490565b6100b6610290565b6100df61017536600461070b565b61029f565b6100df61018836600461070b565b61031f565b6100f361019b366004610793565b61032d565b6060600380546101af906107c6565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107c6565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b600033610240818585610358565b5060019392505050565b60003361025885828561047c565b6102638585856104f6565b506001949350505050565b600033610240818585610281838361032d565b61028b9190610800565b610358565b6060600480546101af906107c6565b600033816102ad828661032d565b9050838110156103125760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102638286868403610358565b6000336102408185856104f6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103ba5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610309565b6001600160a01b03821661041b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610309565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610488848461032d565b905060001981146104f057818110156104e35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610309565b6104f08484848403610358565b50505050565b6001600160a01b03831661055a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610309565b6001600160a01b0382166105bc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610309565b6001600160a01b038316600090815260208190526040902054818110156106345760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610309565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104f0565b600060208083528351808285015260005b818110156106c7578581018301518582016040015282016106ab565b818111156106d9576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461070657600080fd5b919050565b6000806040838503121561071e57600080fd5b610727836106ef565b946020939093013593505050565b60008060006060848603121561074a57600080fd5b610753846106ef565b9250610761602085016106ef565b9150604084013590509250925092565b60006020828403121561078357600080fd5b61078c826106ef565b9392505050565b600080604083850312156107a657600080fd5b6107af836106ef565b91506107bd602084016106ef565b90509250929050565b600181811c908216806107da57607f821691505b6020821081036107fa57634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561082157634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220e0538363a738d7ab61202b1e316564565caf60a75e5139a4405fa4f3cad99a5264736f6c634300080e0033",
  "bytecodeSha1": "4f4847f64bf98cdb0429540c5720791466cf7a82",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.14+commit.80d49f37"
  },
  "contractName": "ERC20",
  "coverageMap": {
    "branches": {
      "2": {
        "ERC20._approve": {
          "30": [
            10635,
            10654,
            true
          ],
          "31": [
            10713,
            10734,
            true
          ]
        },
        "ERC20._spendAllowance": {
          "32": [
            11351,
            11388,
            false
          ],
          "33": [
            11412,
            11438,
            true
          ]
        },
        "ERC20._transfer": {
          "34": [
            7599,
            7617,
            true
          ],
          "35": [
            7677,
            7693,
            true
          ],
          "36": [
            7848,
            7869,
            true
          ]
        },
        "ERC20.decreaseAllowance": {
          "29": [
            6809,
            6844,
            true
          ]
        }
      },
      "3": {},
      "5": {},
      "6": {}
    },
    "statements": {
      "2": {
        "ERC20._approve": {
          "16": [
            10627,
            10695
          ],
          "17": [
            10705,
            10773
          ],
          "18": [
            10784,
            10820
          ],
          "19": [
            10830,
            10867
          ]
        },
        "ERC20._spendAllowance": {
          "20": [
            11404,
            11472
          ],
          "21": [
            11514,
            11565
          ]
        },
        "ERC20._transfer": {
          "22": [
            7591,
            7659
          ],
          "23": [
            7669,
            7733
          ],
          "24": [
            7840,
            7912
          ],
          "25": [
            7946,
            7984
          ],
          "26": [
            8161,
            8184
          ],
          "27": [
            8205,
            8236
          ],
          "28": [
            8247,
            8284
          ]
        },
        "ERC20.allowance": {
          "15": [
            4082,
            4116
          ]
        },
        "ERC20.approve": {
          "5": [
            4568,
            4600
          ],
          "6": [
            4610,
            4621
          ]
        },
        "ERC20.balanceOf": {
          "2": [
            3499,
            3524
          ]
        },
        "ERC20.decimals": {
          "1": [
            3166,
            3175
          ]
        },
        "ERC20.decreaseAllowance": {
          "12": [
            6801,
            6886
          ],
          "13": [
            6920,
            6980
          ]
        },
        "ERC20.increaseAllowance": {
          "10": [
            6013,
            6077
          ]
        },
        "ERC20.name": {
          "3": [
            2233,
            2245
          ]
        },
        "ERC20.symbol": {
          "11": [
            2446,
            2460
          ]
        },
        "ERC20.totalSupply": {
          "0": [
            3322,
            3341
          ]
        },
        "ERC20.transfer": {
          "14": [
            3860,
            3888
          ]
        },
        "ERC20.transferFrom": {
          "7": [
            5373,
            5411
          ],
          "8": [
            5421,
            5448
          ],
          "9": [
            5458,
            5469
          ]
        }
      },
      "3": {},
      "5": {},
      "6": {
        "Context._msgSender": {
          "4": [
            712,
            729
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.8.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/IERC20Metadata"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c3919061069a565b60405180910390f35b6100df6100da36600461070b565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610735565b61024a565b604051601281526020016100c3565b6100df61013136600461070b565b61026e565b6100f3610144366004610771565b6001600160a01b031660009081526020819052604090205490565b6100b6610290565b6100df61017536600461070b565b61029f565b6100df61018836600461070b565b61031f565b6100f361019b366004610793565b61032d565b6060600380546101af906107c6565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107c6565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b600033610240818585610358565b5060019392505050565b60003361025885828561047c565b6102638585856104f6565b506001949350505050565b600033610240818585610281838361032d565b61028b9190610800565b610358565b6060600480546101af906107c6565b600033816102ad828661032d565b9050838110156103125760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102638286868403610358565b6000336102408185856104f6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103ba5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610309565b6001600160a01b03821661041b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610309565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610488848461032d565b905060001981146104f057818110156104e35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610309565b6104f08484848403610358565b50505050565b6001600160a01b03831661055a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610309565b6001600160a01b0382166105bc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610309565b6001600160a01b038316600090815260208190526040902054818110156106345760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610309565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104f0565b600060208083528351808285015260005b818110156106c7578581018301518582016040015282016106ab565b818111156106d9576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461070657600080fd5b919050565b6000806040838503121561071e57600080fd5b610727836106ef565b946020939093013593505050565b60008060006060848603121561074a57600080fd5b610753846106ef565b9250610761602085016106ef565b9150604084013590509250925092565b60006020828403121561078357600080fd5b61078c826106ef565b9392505050565b600080604083850312156107a657600080fd5b6107af836106ef565b91506107bd602084016106ef565b90509250929050565b600181811c908216806107da57607f821691505b6020821081036107fa57634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561082157634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220e0538363a738d7ab61202b1e316564565caf60a75e5139a4405fa4f3cad99a5264736f6c634300080e0033",
  "deployedSourceMap": "1401:11610:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4431:197;;;;;;:::i;:::-;;:::i;:::-;;;1218:14:8;;1211:22;1193:41;;1181:2;1166:18;4431:197:2;1053:187:8;3242:106:2;3329:12;;3242:106;;;1391:25:8;;;1379:2;1364:18;3242:106:2;1245:177:8;5190:286:2;;;;;;:::i;:::-;;:::i;3091:91::-;;;3173:2;1902:36:8;;1890:2;1875:18;3091:91:2;1760:184:8;5871:234:2;;;;;;:::i;:::-;;:::i;3406:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3506:18:2;3480:7;3506:18;;;;;;;;;;;;3406:125;2365:102;;;:::i;6592:427::-;;;;;;:::i;:::-;;:::i;3727:189::-;;;;;;:::i;:::-;;:::i;3974:149::-;;;;;;:::i;:::-;;:::i;2154:98::-;2208:13;2240:5;2233:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;:::o;4431:197::-;4514:4;719:10:6;4568:32:2;719:10:6;4584:7:2;4593:6;4568:8;:32::i;:::-;-1:-1:-1;4617:4:2;;4431:197;-1:-1:-1;;;4431:197:2:o;5190:286::-;5317:4;719:10:6;5373:38:2;5389:4;719:10:6;5404:6:2;5373:15;:38::i;:::-;5421:27;5431:4;5437:2;5441:6;5421:9;:27::i;:::-;-1:-1:-1;5465:4:2;;5190:286;-1:-1:-1;;;;5190:286:2:o;5871:234::-;5959:4;719:10:6;6013:64:2;719:10:6;6029:7:2;6066:10;6038:25;719:10:6;6029:7:2;6038:9;:25::i;:::-;:38;;;;:::i;:::-;6013:8;:64::i;2365:102::-;2421:13;2453:7;2446:14;;;;;:::i;6592:427::-;6685:4;719:10:6;6685:4:2;6766:25;719:10:6;6783:7:2;6766:9;:25::i;:::-;6739:52;;6829:15;6809:16;:35;;6801:85;;;;-1:-1:-1;;;6801:85:2;;3222:2:8;6801:85:2;;;3204:21:8;3261:2;3241:18;;;3234:30;3300:34;3280:18;;;3273:62;-1:-1:-1;;;3351:18:8;;;3344:35;3396:19;;6801:85:2;;;;;;;;;6920:60;6929:5;6936:7;6964:15;6945:16;:34;6920:8;:60::i;3727:189::-;3806:4;719:10:6;3860:28:2;719:10:6;3877:2:2;3881:6;3860:9;:28::i;3974:149::-;-1:-1:-1;;;;;4089:18:2;;;4063:7;4089:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3974:149::o;10504:370::-;-1:-1:-1;;;;;10635:19:2;;10627:68;;;;-1:-1:-1;;;10627:68:2;;3628:2:8;10627:68:2;;;3610:21:8;3667:2;3647:18;;;3640:30;3706:34;3686:18;;;3679:62;-1:-1:-1;;;3757:18:8;;;3750:34;3801:19;;10627:68:2;3426:400:8;10627:68:2;-1:-1:-1;;;;;10713:21:2;;10705:68;;;;-1:-1:-1;;;10705:68:2;;4033:2:8;10705:68:2;;;4015:21:8;4072:2;4052:18;;;4045:30;4111:34;4091:18;;;4084:62;-1:-1:-1;;;4162:18:8;;;4155:32;4204:19;;10705:68:2;3831:398:8;10705:68:2;-1:-1:-1;;;;;10784:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10835:32;;1391:25:8;;;10835:32:2;;1364:18:8;10835:32:2;;;;;;;10504:370;;;:::o;11155:441::-;11285:24;11312:25;11322:5;11329:7;11312:9;:25::i;:::-;11285:52;;-1:-1:-1;;11351:16:2;:37;11347:243;;11432:6;11412:16;:26;;11404:68;;;;-1:-1:-1;;;11404:68:2;;4436:2:8;11404:68:2;;;4418:21:8;4475:2;4455:18;;;4448:30;4514:31;4494:18;;;4487:59;4563:18;;11404:68:2;4234:353:8;11404:68:2;11514:51;11523:5;11530:7;11558:6;11539:16;:25;11514:8;:51::i;:::-;11275:321;11155:441;;;:::o;7473:818::-;-1:-1:-1;;;;;7599:18:2;;7591:68;;;;-1:-1:-1;;;7591:68:2;;4794:2:8;7591:68:2;;;4776:21:8;4833:2;4813:18;;;4806:30;4872:34;4852:18;;;4845:62;-1:-1:-1;;;4923:18:8;;;4916:35;4968:19;;7591:68:2;4592:401:8;7591:68:2;-1:-1:-1;;;;;7677:16:2;;7669:64;;;;-1:-1:-1;;;7669:64:2;;5200:2:8;7669:64:2;;;5182:21:8;5239:2;5219:18;;;5212:30;5278:34;5258:18;;;5251:62;-1:-1:-1;;;5329:18:8;;;5322:33;5372:19;;7669:64:2;4998:399:8;7669:64:2;-1:-1:-1;;;;;7815:15:2;;7793:19;7815:15;;;;;;;;;;;7848:21;;;;7840:72;;;;-1:-1:-1;;;7840:72:2;;5604:2:8;7840:72:2;;;5586:21:8;5643:2;5623:18;;;5616:30;5682:34;5662:18;;;5655:62;-1:-1:-1;;;5733:18:8;;;5726:36;5779:19;;7840:72:2;5402:402:8;7840:72:2;-1:-1:-1;;;;;7946:15:2;;;:9;:15;;;;;;;;;;;7964:20;;;7946:38;;8161:13;;;;;;;;;;:23;;;;;;8210:26;;1391:25:8;;;8161:13:2;;8210:26;;1364:18:8;8210:26:2;;;;;;;8247:37;12180:121;14:597:8;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:8;574:15;-1:-1:-1;;570:29:8;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:8:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:8;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:8:o;1427:328::-;1504:6;1512;1520;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;1612:29;1631:9;1612:29;:::i;:::-;1602:39;;1660:38;1694:2;1683:9;1679:18;1660:38;:::i;:::-;1650:48;;1745:2;1734:9;1730:18;1717:32;1707:42;;1427:328;;;;;:::o;1949:186::-;2008:6;2061:2;2049:9;2040:7;2036:23;2032:32;2029:52;;;2077:1;2074;2067:12;2029:52;2100:29;2119:9;2100:29;:::i;:::-;2090:39;1949:186;-1:-1:-1;;;1949:186:8:o;2140:260::-;2208:6;2216;2269:2;2257:9;2248:7;2244:23;2240:32;2237:52;;;2285:1;2282;2275:12;2237:52;2308:29;2327:9;2308:29;:::i;:::-;2298:39;;2356:38;2390:2;2379:9;2375:18;2356:38;:::i;:::-;2346:48;;2140:260;;;;;:::o;2405:380::-;2484:1;2480:12;;;;2527;;;2548:61;;2602:4;2594:6;2590:17;2580:27;;2548:61;2655:2;2647:6;2644:14;2624:18;2621:38;2618:161;;2701:10;2696:3;2692:20;2689:1;2682:31;2736:4;2733:1;2726:15;2764:4;2761:1;2754:15;2618:161;;2405:380;;;:::o;2790:225::-;2830:3;2861:1;2857:6;2854:1;2851:13;2848:136;;;2906:10;2901:3;2897:20;2894:1;2887:31;2941:4;2938:1;2931:15;2969:4;2966:1;2959:15;2848:136;-1:-1:-1;3000:9:8;;2790:225::o",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "constructor": {
        "details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "offset": [
    1401,
    13011
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x69A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x70B JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x24A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x70B JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x771 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x290 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x70B JUMP JUMPDEST PUSH2 0x29F JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x70B JUMP JUMPDEST PUSH2 0x31F JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x793 JUMP JUMPDEST PUSH2 0x32D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7C6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x358 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x258 DUP6 DUP3 DUP6 PUSH2 0x47C JUMP JUMPDEST PUSH2 0x263 DUP6 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x281 DUP4 DUP4 PUSH2 0x32D JUMP JUMPDEST PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x800 JUMP JUMPDEST PUSH2 0x358 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C6 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AD DUP3 DUP7 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x312 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x263 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x488 DUP5 DUP5 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x309 JUMP JUMPDEST PUSH2 0x4F0 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6C7 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6AB JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x6D9 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x706 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x71E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x727 DUP4 PUSH2 0x6EF JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x74A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x753 DUP5 PUSH2 0x6EF JUMP JUMPDEST SWAP3 POP PUSH2 0x761 PUSH1 0x20 DUP6 ADD PUSH2 0x6EF JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x783 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x78C DUP3 PUSH2 0x6EF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7AF DUP4 PUSH2 0x6EF JUMP JUMPDEST SWAP2 POP PUSH2 0x7BD PUSH1 0x20 DUP5 ADD PUSH2 0x6EF JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7DA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7FA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x821 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE0 MSTORE8 DUP4 PUSH4 0xA738D7AB PUSH2 0x202B 0x1E BALANCE PUSH6 0x64565CAF60A7 0x5E MLOAD CODECOPY LOG4 BLOCKHASH 0x5F LOG4 RETURN 0xCA 0xD9 SWAP11 MSTORE PUSH5 0x736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        1401,
        13011
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "6": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "DUP1",
      "path": "2"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "REVERT",
      "path": "2"
    },
    "16": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "17": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "POP",
      "path": "2"
    },
    "18": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "21": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "LT",
      "path": "2"
    },
    "22": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA9"
    },
    "25": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "26": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "29": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "SHR",
      "path": "2"
    },
    "32": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "DUP1",
      "path": "2"
    },
    "33": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x39509351"
    },
    "38": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "GT",
      "path": "2"
    },
    "39": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x71"
    },
    "42": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "43": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "DUP1",
      "path": "2"
    },
    "44": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x39509351"
    },
    "49": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "EQ",
      "path": "2"
    },
    "50": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x123"
    },
    "53": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "54": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "DUP1",
      "path": "2"
    },
    "55": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x70A08231"
    },
    "60": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "EQ",
      "path": "2"
    },
    "61": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x136"
    },
    "64": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "65": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "DUP1",
      "path": "2"
    },
    "66": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x95D89B41"
    },
    "71": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "EQ",
      "path": "2"
    },
    "72": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15F"
    },
    "75": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "76": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "DUP1",
      "path": "2"
    },
    "77": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xA457C2D7"
    },
    "82": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "EQ",
      "path": "2"
    },
    "83": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x167"
    },
    "86": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "87": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "DUP1",
      "path": "2"
    },
    "88": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xA9059CBB"
    },
    "93": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "EQ",
      "path": "2"
    },
    "94": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17A"
    },
    "97": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "98": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "DUP1",
      "path": "2"
    },
    "99": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xDD62ED3E"
    },
    "104": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "EQ",
      "path": "2"
    },
    "105": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18D"
    },
    "108": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "109": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "DUP1",
      "path": "2"
    },
    "112": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "REVERT",
      "path": "2"
    },
    "113": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "114": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "DUP1",
      "path": "2"
    },
    "115": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6FDDE03"
    },
    "120": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "EQ",
      "path": "2"
    },
    "121": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAE"
    },
    "124": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "125": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "DUP1",
      "path": "2"
    },
    "126": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x95EA7B3"
    },
    "131": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "EQ",
      "path": "2"
    },
    "132": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCC"
    },
    "135": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "136": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "DUP1",
      "path": "2"
    },
    "137": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x18160DDD"
    },
    "142": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "EQ",
      "path": "2"
    },
    "143": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xEF"
    },
    "146": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "147": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "DUP1",
      "path": "2"
    },
    "148": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x23B872DD"
    },
    "153": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "EQ",
      "path": "2"
    },
    "154": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x101"
    },
    "157": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "158": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "DUP1",
      "path": "2"
    },
    "159": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x313CE567"
    },
    "164": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "EQ",
      "path": "2"
    },
    "165": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x114"
    },
    "168": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "169": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "170": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "172": {
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "DUP1",
      "path": "2"
    },
    "173": {
      "first_revert": true,
      "fn": null,
      "offset": [
        1401,
        13011
      ],
      "op": "REVERT",
      "path": "2"
    },
    "174": {
      "fn": "ERC20.name",
      "offset": [
        2154,
        2252
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "175": {
      "fn": "ERC20.name",
      "offset": [
        2154,
        2252
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB6"
    },
    "178": {
      "fn": "ERC20.name",
      "offset": [
        2154,
        2252
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A0"
    },
    "181": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2154,
        2252
      ],
      "op": "JUMP",
      "path": "2"
    },
    "182": {
      "fn": "ERC20.name",
      "offset": [
        2154,
        2252
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "183": {
      "fn": "ERC20.name",
      "offset": [
        2154,
        2252
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "185": {
      "fn": "ERC20.name",
      "offset": [
        2154,
        2252
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "186": {
      "fn": "ERC20.name",
      "offset": [
        2154,
        2252
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC3"
    },
    "189": {
      "fn": "ERC20.name",
      "offset": [
        2154,
        2252
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "190": {
      "fn": "ERC20.name",
      "offset": [
        2154,
        2252
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "191": {
      "fn": "ERC20.name",
      "offset": [
        2154,
        2252
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x69A"
    },
    "194": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2154,
        2252
      ],
      "op": "JUMP",
      "path": "2"
    },
    "195": {
      "fn": "ERC20.name",
      "offset": [
        2154,
        2252
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "196": {
      "fn": "ERC20.name",
      "offset": [
        2154,
        2252
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "198": {
      "fn": "ERC20.name",
      "offset": [
        2154,
        2252
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "199": {
      "fn": "ERC20.name",
      "offset": [
        2154,
        2252
      ],
      "op": "DUP1",
      "path": "2"
    },
    "200": {
      "fn": "ERC20.name",
      "offset": [
        2154,
        2252
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "201": {
      "fn": "ERC20.name",
      "offset": [
        2154,
        2252
      ],
      "op": "SUB",
      "path": "2"
    },
    "202": {
      "fn": "ERC20.name",
      "offset": [
        2154,
        2252
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "203": {
      "fn": "ERC20.name",
      "offset": [
        2154,
        2252
      ],
      "op": "RETURN",
      "path": "2"
    },
    "204": {
      "fn": "ERC20.approve",
      "offset": [
        4431,
        4628
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "205": {
      "fn": "ERC20.approve",
      "offset": [
        4431,
        4628
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDF"
    },
    "208": {
      "fn": "ERC20.approve",
      "offset": [
        4431,
        4628
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDA"
    },
    "211": {
      "fn": "ERC20.approve",
      "offset": [
        4431,
        4628
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "212": {
      "fn": "ERC20.approve",
      "offset": [
        4431,
        4628
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "214": {
      "fn": "ERC20.approve",
      "offset": [
        4431,
        4628
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x70B"
    },
    "217": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4431,
        4628
      ],
      "op": "JUMP",
      "path": "2"
    },
    "218": {
      "fn": "ERC20.approve",
      "offset": [
        4431,
        4628
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "219": {
      "fn": "ERC20.approve",
      "offset": [
        4431,
        4628
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x232"
    },
    "222": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4431,
        4628
      ],
      "op": "JUMP",
      "path": "2"
    },
    "223": {
      "fn": "ERC20.approve",
      "offset": [
        4431,
        4628
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "224": {
      "fn": "ERC20.approve",
      "offset": [
        4431,
        4628
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "226": {
      "fn": "ERC20.approve",
      "offset": [
        4431,
        4628
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "227": {
      "op": "SWAP1"
    },
    "228": {
      "op": "ISZERO"
    },
    "229": {
      "op": "ISZERO"
    },
    "230": {
      "op": "DUP2"
    },
    "231": {
      "op": "MSTORE"
    },
    "232": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "234": {
      "op": "ADD"
    },
    "235": {
      "fn": "ERC20.approve",
      "offset": [
        4431,
        4628
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC3"
    },
    "238": {
      "op": "JUMP"
    },
    "239": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3242,
        3348
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "240": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3329,
        3341
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 0,
      "value": "0x2"
    },
    "242": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3329,
        3341
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "243": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3242,
        3348
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "244": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3242,
        3348
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "246": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3242,
        3348
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "247": {
      "op": "SWAP1"
    },
    "248": {
      "op": "DUP2"
    },
    "249": {
      "op": "MSTORE"
    },
    "250": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "252": {
      "op": "ADD"
    },
    "253": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3242,
        3348
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC3"
    },
    "256": {
      "op": "JUMP"
    },
    "257": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5190,
        5476
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "258": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5190,
        5476
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDF"
    },
    "261": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5190,
        5476
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10F"
    },
    "264": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5190,
        5476
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "265": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5190,
        5476
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "267": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5190,
        5476
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x735"
    },
    "270": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5190,
        5476
      ],
      "op": "JUMP",
      "path": "2"
    },
    "271": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5190,
        5476
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "272": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5190,
        5476
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x24A"
    },
    "275": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5190,
        5476
      ],
      "op": "JUMP",
      "path": "2"
    },
    "276": {
      "fn": "ERC20.decimals",
      "offset": [
        3091,
        3182
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "277": {
      "fn": "ERC20.decimals",
      "offset": [
        3091,
        3182
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "279": {
      "fn": "ERC20.decimals",
      "offset": [
        3091,
        3182
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "280": {
      "fn": "ERC20.decimals",
      "offset": [
        3173,
        3175
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 1,
      "value": "0x12"
    },
    "282": {
      "op": "DUP2"
    },
    "283": {
      "op": "MSTORE"
    },
    "284": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "286": {
      "op": "ADD"
    },
    "287": {
      "fn": "ERC20.decimals",
      "offset": [
        3091,
        3182
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC3"
    },
    "290": {
      "op": "JUMP"
    },
    "291": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5871,
        6105
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "292": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5871,
        6105
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDF"
    },
    "295": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5871,
        6105
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x131"
    },
    "298": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5871,
        6105
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "299": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5871,
        6105
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "301": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5871,
        6105
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x70B"
    },
    "304": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5871,
        6105
      ],
      "op": "JUMP",
      "path": "2"
    },
    "305": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5871,
        6105
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "306": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5871,
        6105
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x26E"
    },
    "309": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5871,
        6105
      ],
      "op": "JUMP",
      "path": "2"
    },
    "310": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3406,
        3531
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "311": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3406,
        3531
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF3"
    },
    "314": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3406,
        3531
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x144"
    },
    "317": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3406,
        3531
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "318": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3406,
        3531
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "320": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3406,
        3531
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x771"
    },
    "323": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        3406,
        3531
      ],
      "op": "JUMP",
      "path": "2"
    },
    "324": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3406,
        3531
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "327": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "329": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "331": {
      "op": "SHL"
    },
    "332": {
      "op": "SUB"
    },
    "333": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3524
      ],
      "op": "AND",
      "path": "2",
      "statement": 2
    },
    "334": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3480,
        3487
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "336": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3524
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "337": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3524
      ],
      "op": "DUP2",
      "path": "2"
    },
    "338": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3524
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "339": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3524
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "341": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3524
      ],
      "op": "DUP2",
      "path": "2"
    },
    "342": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3524
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "343": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3524
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "344": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3524
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "346": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3524
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "347": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3524
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "348": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3524
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "349": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3524
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "350": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3406,
        3531
      ],
      "op": "JUMP",
      "path": "2"
    },
    "351": {
      "fn": "ERC20.symbol",
      "offset": [
        2365,
        2467
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "352": {
      "fn": "ERC20.symbol",
      "offset": [
        2365,
        2467
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB6"
    },
    "355": {
      "fn": "ERC20.symbol",
      "offset": [
        2365,
        2467
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x290"
    },
    "358": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2365,
        2467
      ],
      "op": "JUMP",
      "path": "2"
    },
    "359": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6592,
        7019
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "360": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6592,
        7019
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDF"
    },
    "363": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6592,
        7019
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x175"
    },
    "366": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6592,
        7019
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "367": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6592,
        7019
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "369": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6592,
        7019
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x70B"
    },
    "372": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6592,
        7019
      ],
      "op": "JUMP",
      "path": "2"
    },
    "373": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6592,
        7019
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "374": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6592,
        7019
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x29F"
    },
    "377": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6592,
        7019
      ],
      "op": "JUMP",
      "path": "2"
    },
    "378": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3916
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "379": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3916
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDF"
    },
    "382": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3916
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x188"
    },
    "385": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3916
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "386": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3916
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "388": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3916
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x70B"
    },
    "391": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3727,
        3916
      ],
      "op": "JUMP",
      "path": "2"
    },
    "392": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3916
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "393": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3916
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x31F"
    },
    "396": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3727,
        3916
      ],
      "op": "JUMP",
      "path": "2"
    },
    "397": {
      "fn": "ERC20.allowance",
      "offset": [
        3974,
        4123
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "398": {
      "fn": "ERC20.allowance",
      "offset": [
        3974,
        4123
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF3"
    },
    "401": {
      "fn": "ERC20.allowance",
      "offset": [
        3974,
        4123
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19B"
    },
    "404": {
      "fn": "ERC20.allowance",
      "offset": [
        3974,
        4123
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "405": {
      "fn": "ERC20.allowance",
      "offset": [
        3974,
        4123
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "407": {
      "fn": "ERC20.allowance",
      "offset": [
        3974,
        4123
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x793"
    },
    "410": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        3974,
        4123
      ],
      "op": "JUMP",
      "path": "2"
    },
    "411": {
      "fn": "ERC20.allowance",
      "offset": [
        3974,
        4123
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "412": {
      "fn": "ERC20.allowance",
      "offset": [
        3974,
        4123
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x32D"
    },
    "415": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        3974,
        4123
      ],
      "op": "JUMP",
      "path": "2"
    },
    "416": {
      "fn": "ERC20.name",
      "offset": [
        2154,
        2252
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "417": {
      "fn": "ERC20.name",
      "offset": [
        2208,
        2221
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "419": {
      "fn": "ERC20.name",
      "offset": [
        2240,
        2245
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 3,
      "value": "0x3"
    },
    "421": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "DUP1",
      "path": "2"
    },
    "422": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "423": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AF"
    },
    "426": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "427": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7C6"
    },
    "430": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2233,
        2245
      ],
      "op": "JUMP",
      "path": "2"
    },
    "431": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "432": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "DUP1",
      "path": "2"
    },
    "433": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "435": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "ADD",
      "path": "2"
    },
    "436": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "438": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "DUP1",
      "path": "2"
    },
    "439": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "440": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "DIV",
      "path": "2"
    },
    "441": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "MUL",
      "path": "2"
    },
    "442": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "444": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "ADD",
      "path": "2"
    },
    "445": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "447": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "448": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "449": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "DUP2",
      "path": "2"
    },
    "450": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "ADD",
      "path": "2"
    },
    "451": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "453": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "454": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "DUP1",
      "path": "2"
    },
    "455": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "456": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "457": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "458": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "DUP2",
      "path": "2"
    },
    "459": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "DUP2",
      "path": "2"
    },
    "460": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "461": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "463": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "ADD",
      "path": "2"
    },
    "464": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "DUP3",
      "path": "2"
    },
    "465": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "DUP1",
      "path": "2"
    },
    "466": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "467": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DB"
    },
    "470": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "471": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7C6"
    },
    "474": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2233,
        2245
      ],
      "op": "JUMP",
      "path": "2"
    },
    "475": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "476": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "DUP1",
      "path": "2"
    },
    "477": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "478": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x228"
    },
    "481": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "482": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "DUP1",
      "path": "2"
    },
    "483": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "485": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "LT",
      "path": "2"
    },
    "486": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FD"
    },
    "489": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "490": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "493": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "DUP1",
      "path": "2"
    },
    "494": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "DUP4",
      "path": "2"
    },
    "495": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "496": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "DIV",
      "path": "2"
    },
    "497": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "MUL",
      "path": "2"
    },
    "498": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "DUP4",
      "path": "2"
    },
    "499": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "500": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "501": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "503": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "ADD",
      "path": "2"
    },
    "504": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "505": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x228"
    },
    "508": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "JUMP",
      "path": "2"
    },
    "509": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "510": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "DUP3",
      "path": "2"
    },
    "511": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "ADD",
      "path": "2"
    },
    "512": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "513": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "514": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "516": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "517": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "519": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "521": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "522": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "523": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "524": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "DUP2",
      "path": "2"
    },
    "525": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "526": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "DUP2",
      "path": "2"
    },
    "527": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "528": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "529": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "531": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "ADD",
      "path": "2"
    },
    "532": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "533": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "535": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "ADD",
      "path": "2"
    },
    "536": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "DUP1",
      "path": "2"
    },
    "537": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "DUP4",
      "path": "2"
    },
    "538": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "GT",
      "path": "2"
    },
    "539": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x20B"
    },
    "542": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "543": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "DUP3",
      "path": "2"
    },
    "544": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "545": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "SUB",
      "path": "2"
    },
    "546": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "548": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "AND",
      "path": "2"
    },
    "549": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "DUP3",
      "path": "2"
    },
    "550": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "ADD",
      "path": "2"
    },
    "551": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "552": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "553": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "POP",
      "path": "2"
    },
    "554": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "POP",
      "path": "2"
    },
    "555": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "POP",
      "path": "2"
    },
    "556": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "POP",
      "path": "2"
    },
    "557": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "POP",
      "path": "2"
    },
    "558": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "559": {
      "fn": "ERC20.name",
      "offset": [
        2233,
        2245
      ],
      "op": "POP",
      "path": "2"
    },
    "560": {
      "fn": "ERC20.name",
      "offset": [
        2154,
        2252
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "561": {
      "fn": "ERC20.name",
      "jump": "o",
      "offset": [
        2154,
        2252
      ],
      "op": "JUMP",
      "path": "2"
    },
    "562": {
      "fn": "ERC20.approve",
      "offset": [
        4431,
        4628
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "563": {
      "fn": "ERC20.approve",
      "offset": [
        4514,
        4518
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "565": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 4
    },
    "566": {
      "fn": "ERC20.approve",
      "offset": [
        4568,
        4600
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 5,
      "value": "0x240"
    },
    "569": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP2",
      "path": "6"
    },
    "570": {
      "fn": "ERC20.approve",
      "offset": [
        4584,
        4591
      ],
      "op": "DUP6",
      "path": "2"
    },
    "571": {
      "fn": "ERC20.approve",
      "offset": [
        4593,
        4599
      ],
      "op": "DUP6",
      "path": "2"
    },
    "572": {
      "fn": "ERC20.approve",
      "offset": [
        4568,
        4576
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x358"
    },
    "575": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4568,
        4600
      ],
      "op": "JUMP",
      "path": "2"
    },
    "576": {
      "fn": "ERC20.approve",
      "offset": [
        4568,
        4600
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "577": {
      "op": "POP"
    },
    "578": {
      "fn": "ERC20.approve",
      "offset": [
        4617,
        4621
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 6,
      "value": "0x1"
    },
    "580": {
      "fn": "ERC20.approve",
      "offset": [
        4617,
        4621
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "581": {
      "fn": "ERC20.approve",
      "offset": [
        4431,
        4628
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "582": {
      "op": "POP"
    },
    "583": {
      "op": "POP"
    },
    "584": {
      "op": "POP"
    },
    "585": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        4431,
        4628
      ],
      "op": "JUMP",
      "path": "2"
    },
    "586": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5190,
        5476
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "587": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5317,
        5321
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "589": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "6"
    },
    "590": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5373,
        5411
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 7,
      "value": "0x258"
    },
    "593": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5389,
        5393
      ],
      "op": "DUP6",
      "path": "2"
    },
    "594": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP3",
      "path": "6"
    },
    "595": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5404,
        5410
      ],
      "op": "DUP6",
      "path": "2"
    },
    "596": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5373,
        5388
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x47C"
    },
    "599": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5373,
        5411
      ],
      "op": "JUMP",
      "path": "2"
    },
    "600": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5373,
        5411
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "601": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5421,
        5448
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 8,
      "value": "0x263"
    },
    "604": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5431,
        5435
      ],
      "op": "DUP6",
      "path": "2"
    },
    "605": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5437,
        5439
      ],
      "op": "DUP6",
      "path": "2"
    },
    "606": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5441,
        5447
      ],
      "op": "DUP6",
      "path": "2"
    },
    "607": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5421,
        5430
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4F6"
    },
    "610": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5421,
        5448
      ],
      "op": "JUMP",
      "path": "2"
    },
    "611": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5421,
        5448
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "612": {
      "op": "POP"
    },
    "613": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5465,
        5469
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 9,
      "value": "0x1"
    },
    "615": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5465,
        5469
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "616": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5190,
        5476
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "617": {
      "op": "POP"
    },
    "618": {
      "op": "POP"
    },
    "619": {
      "op": "POP"
    },
    "620": {
      "op": "POP"
    },
    "621": {
      "fn": "ERC20.transferFrom",
      "jump": "o",
      "offset": [
        5190,
        5476
      ],
      "op": "JUMP",
      "path": "2"
    },
    "622": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5871,
        6105
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "623": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5959,
        5963
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "625": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "6"
    },
    "626": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6013,
        6077
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 10,
      "value": "0x240"
    },
    "629": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP2",
      "path": "6"
    },
    "630": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6029,
        6036
      ],
      "op": "DUP6",
      "path": "2"
    },
    "631": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6066,
        6076
      ],
      "op": "DUP6",
      "path": "2"
    },
    "632": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6038,
        6063
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x281"
    },
    "635": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP4",
      "path": "6"
    },
    "636": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6029,
        6036
      ],
      "op": "DUP4",
      "path": "2"
    },
    "637": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6038,
        6047
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x32D"
    },
    "640": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        6038,
        6063
      ],
      "op": "JUMP",
      "path": "2"
    },
    "641": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6038,
        6063
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "642": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6038,
        6076
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28B"
    },
    "645": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6038,
        6076
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "646": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6038,
        6076
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "647": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6038,
        6076
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x800"
    },
    "650": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        6038,
        6076
      ],
      "op": "JUMP",
      "path": "2"
    },
    "651": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6038,
        6076
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "652": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6013,
        6021
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x358"
    },
    "655": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        6013,
        6077
      ],
      "op": "JUMP",
      "path": "2"
    },
    "656": {
      "fn": "ERC20.symbol",
      "offset": [
        2365,
        2467
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "657": {
      "fn": "ERC20.symbol",
      "offset": [
        2421,
        2434
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "659": {
      "fn": "ERC20.symbol",
      "offset": [
        2453,
        2460
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 11,
      "value": "0x4"
    },
    "661": {
      "fn": "ERC20.symbol",
      "offset": [
        2446,
        2460
      ],
      "op": "DUP1",
      "path": "2"
    },
    "662": {
      "fn": "ERC20.symbol",
      "offset": [
        2446,
        2460
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "663": {
      "fn": "ERC20.symbol",
      "offset": [
        2446,
        2460
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AF"
    },
    "666": {
      "fn": "ERC20.symbol",
      "offset": [
        2446,
        2460
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "667": {
      "fn": "ERC20.symbol",
      "offset": [
        2446,
        2460
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7C6"
    },
    "670": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2446,
        2460
      ],
      "op": "JUMP",
      "path": "2"
    },
    "671": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6592,
        7019
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "672": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6685,
        6689
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "674": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "6"
    },
    "675": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6685,
        6689
      ],
      "op": "DUP2",
      "path": "2"
    },
    "676": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6766,
        6791
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2AD"
    },
    "679": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP3",
      "path": "6"
    },
    "680": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6783,
        6790
      ],
      "op": "DUP7",
      "path": "2"
    },
    "681": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6766,
        6775
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x32D"
    },
    "684": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6766,
        6791
      ],
      "op": "JUMP",
      "path": "2"
    },
    "685": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6766,
        6791
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "686": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6739,
        6791
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "687": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6739,
        6791
      ],
      "op": "POP",
      "path": "2"
    },
    "688": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6829,
        6844
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 12
    },
    "689": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6809,
        6825
      ],
      "op": "DUP2",
      "path": "2"
    },
    "690": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6809,
        6844
      ],
      "op": "LT",
      "path": "2"
    },
    "691": {
      "branch": 29,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6809,
        6844
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "692": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6801,
        6886
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x312"
    },
    "695": {
      "branch": 29,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6801,
        6886
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "696": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6801,
        6886
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "698": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6801,
        6886
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "699": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "703": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "705": {
      "op": "SHL"
    },
    "706": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6801,
        6886
      ],
      "op": "DUP2",
      "path": "2"
    },
    "707": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6801,
        6886
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "708": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "710": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6801,
        6886
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "712": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6801,
        6886
      ],
      "op": "DUP3",
      "path": "2"
    },
    "713": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6801,
        6886
      ],
      "op": "ADD",
      "path": "2"
    },
    "714": {
      "op": "MSTORE"
    },
    "715": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "717": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "719": {
      "op": "DUP3"
    },
    "720": {
      "op": "ADD"
    },
    "721": {
      "op": "MSTORE"
    },
    "722": {
      "op": "PUSH32",
      "value": "0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
    },
    "755": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "757": {
      "op": "DUP3"
    },
    "758": {
      "op": "ADD"
    },
    "759": {
      "op": "MSTORE"
    },
    "760": {
      "op": "PUSH5",
      "value": "0x207A65726F"
    },
    "766": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "768": {
      "op": "SHL"
    },
    "769": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "771": {
      "op": "DUP3"
    },
    "772": {
      "op": "ADD"
    },
    "773": {
      "op": "MSTORE"
    },
    "774": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "776": {
      "op": "ADD"
    },
    "777": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6801,
        6886
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "778": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6801,
        6886
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "780": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6801,
        6886
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "781": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6801,
        6886
      ],
      "op": "DUP1",
      "path": "2"
    },
    "782": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6801,
        6886
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "783": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6801,
        6886
      ],
      "op": "SUB",
      "path": "2"
    },
    "784": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6801,
        6886
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "785": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6801,
        6886
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "2"
    },
    "786": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6801,
        6886
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "787": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6920,
        6980
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 13,
      "value": "0x263"
    },
    "790": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6929,
        6934
      ],
      "op": "DUP3",
      "path": "2"
    },
    "791": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6936,
        6943
      ],
      "op": "DUP7",
      "path": "2"
    },
    "792": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6964,
        6979
      ],
      "op": "DUP7",
      "path": "2"
    },
    "793": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6945,
        6961
      ],
      "op": "DUP5",
      "path": "2"
    },
    "794": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6945,
        6979
      ],
      "op": "SUB",
      "path": "2"
    },
    "795": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6920,
        6928
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x358"
    },
    "798": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6920,
        6980
      ],
      "op": "JUMP",
      "path": "2"
    },
    "799": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3916
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "800": {
      "fn": "ERC20.transfer",
      "offset": [
        3806,
        3810
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "802": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "6"
    },
    "803": {
      "fn": "ERC20.transfer",
      "offset": [
        3860,
        3888
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 14,
      "value": "0x240"
    },
    "806": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP2",
      "path": "6"
    },
    "807": {
      "fn": "ERC20.transfer",
      "offset": [
        3877,
        3879
      ],
      "op": "DUP6",
      "path": "2"
    },
    "808": {
      "fn": "ERC20.transfer",
      "offset": [
        3881,
        3887
      ],
      "op": "DUP6",
      "path": "2"
    },
    "809": {
      "fn": "ERC20.transfer",
      "offset": [
        3860,
        3869
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4F6"
    },
    "812": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3860,
        3888
      ],
      "op": "JUMP",
      "path": "2"
    },
    "813": {
      "fn": "ERC20.allowance",
      "offset": [
        3974,
        4123
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "814": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "816": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "818": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "820": {
      "op": "SHL"
    },
    "821": {
      "op": "SUB"
    },
    "822": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4107
      ],
      "op": "SWAP2",
      "path": "2",
      "statement": 15
    },
    "823": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4107
      ],
      "op": "DUP3",
      "path": "2"
    },
    "824": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4107
      ],
      "op": "AND",
      "path": "2"
    },
    "825": {
      "fn": "ERC20.allowance",
      "offset": [
        4063,
        4070
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "827": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4107
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "828": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4107
      ],
      "op": "DUP2",
      "path": "2"
    },
    "829": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4107
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "830": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4100
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "832": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4107
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "834": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4107
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "835": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4107
      ],
      "op": "DUP2",
      "path": "2"
    },
    "836": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4107
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "837": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4107
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "839": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4107
      ],
      "op": "DUP1",
      "path": "2"
    },
    "840": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4107
      ],
      "op": "DUP4",
      "path": "2"
    },
    "841": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4107
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "842": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4116
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "843": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4116
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "844": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4116
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "845": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4116
      ],
      "op": "AND",
      "path": "2"
    },
    "846": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4116
      ],
      "op": "DUP3",
      "path": "2"
    },
    "847": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4116
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "848": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4116
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "849": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4116
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "850": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4116
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "851": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4116
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "852": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4116
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "853": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4116
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "854": {
      "fn": "ERC20.allowance",
      "offset": [
        4089,
        4116
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "855": {
      "fn": "ERC20.allowance",
      "jump": "o",
      "offset": [
        3974,
        4123
      ],
      "op": "JUMP",
      "path": "2"
    },
    "856": {
      "fn": "ERC20._approve",
      "offset": [
        10504,
        10874
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "857": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "859": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "861": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "863": {
      "op": "SHL"
    },
    "864": {
      "op": "SUB"
    },
    "865": {
      "fn": "ERC20._approve",
      "offset": [
        10635,
        10654
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 16
    },
    "866": {
      "branch": 30,
      "fn": "ERC20._approve",
      "offset": [
        10635,
        10654
      ],
      "op": "AND",
      "path": "2"
    },
    "867": {
      "fn": "ERC20._approve",
      "offset": [
        10627,
        10695
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3BA"
    },
    "870": {
      "branch": 30,
      "fn": "ERC20._approve",
      "offset": [
        10627,
        10695
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "871": {
      "fn": "ERC20._approve",
      "offset": [
        10627,
        10695
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "873": {
      "fn": "ERC20._approve",
      "offset": [
        10627,
        10695
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "874": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "878": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "880": {
      "op": "SHL"
    },
    "881": {
      "fn": "ERC20._approve",
      "offset": [
        10627,
        10695
      ],
      "op": "DUP2",
      "path": "2"
    },
    "882": {
      "fn": "ERC20._approve",
      "offset": [
        10627,
        10695
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "883": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "885": {
      "fn": "ERC20._approve",
      "offset": [
        10627,
        10695
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "887": {
      "fn": "ERC20._approve",
      "offset": [
        10627,
        10695
      ],
      "op": "DUP3",
      "path": "2"
    },
    "888": {
      "fn": "ERC20._approve",
      "offset": [
        10627,
        10695
      ],
      "op": "ADD",
      "path": "2"
    },
    "889": {
      "op": "MSTORE"
    },
    "890": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "892": {
      "op": "DUP1"
    },
    "893": {
      "op": "DUP3"
    },
    "894": {
      "op": "ADD"
    },
    "895": {
      "op": "MSTORE"
    },
    "896": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
    },
    "929": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "931": {
      "op": "DUP3"
    },
    "932": {
      "op": "ADD"
    },
    "933": {
      "op": "MSTORE"
    },
    "934": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "939": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "941": {
      "op": "SHL"
    },
    "942": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "944": {
      "op": "DUP3"
    },
    "945": {
      "op": "ADD"
    },
    "946": {
      "op": "MSTORE"
    },
    "947": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "949": {
      "op": "ADD"
    },
    "950": {
      "fn": "ERC20._approve",
      "offset": [
        10627,
        10695
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x309"
    },
    "953": {
      "op": "JUMP"
    },
    "954": {
      "fn": "ERC20._approve",
      "offset": [
        10627,
        10695
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "955": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "957": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "959": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "961": {
      "op": "SHL"
    },
    "962": {
      "op": "SUB"
    },
    "963": {
      "fn": "ERC20._approve",
      "offset": [
        10713,
        10734
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 17
    },
    "964": {
      "branch": 31,
      "fn": "ERC20._approve",
      "offset": [
        10713,
        10734
      ],
      "op": "AND",
      "path": "2"
    },
    "965": {
      "fn": "ERC20._approve",
      "offset": [
        10705,
        10773
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x41B"
    },
    "968": {
      "branch": 31,
      "fn": "ERC20._approve",
      "offset": [
        10705,
        10773
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "969": {
      "fn": "ERC20._approve",
      "offset": [
        10705,
        10773
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "971": {
      "fn": "ERC20._approve",
      "offset": [
        10705,
        10773
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "972": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "976": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "978": {
      "op": "SHL"
    },
    "979": {
      "fn": "ERC20._approve",
      "offset": [
        10705,
        10773
      ],
      "op": "DUP2",
      "path": "2"
    },
    "980": {
      "fn": "ERC20._approve",
      "offset": [
        10705,
        10773
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "981": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "983": {
      "fn": "ERC20._approve",
      "offset": [
        10705,
        10773
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "985": {
      "fn": "ERC20._approve",
      "offset": [
        10705,
        10773
      ],
      "op": "DUP3",
      "path": "2"
    },
    "986": {
      "fn": "ERC20._approve",
      "offset": [
        10705,
        10773
      ],
      "op": "ADD",
      "path": "2"
    },
    "987": {
      "op": "MSTORE"
    },
    "988": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "990": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "992": {
      "op": "DUP3"
    },
    "993": {
      "op": "ADD"
    },
    "994": {
      "op": "MSTORE"
    },
    "995": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F766520746F20746865207A65726F206164647265"
    },
    "1028": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1030": {
      "op": "DUP3"
    },
    "1031": {
      "op": "ADD"
    },
    "1032": {
      "op": "MSTORE"
    },
    "1033": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "1036": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "1038": {
      "op": "SHL"
    },
    "1039": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1041": {
      "op": "DUP3"
    },
    "1042": {
      "op": "ADD"
    },
    "1043": {
      "op": "MSTORE"
    },
    "1044": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1046": {
      "op": "ADD"
    },
    "1047": {
      "fn": "ERC20._approve",
      "offset": [
        10705,
        10773
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x309"
    },
    "1050": {
      "op": "JUMP"
    },
    "1051": {
      "fn": "ERC20._approve",
      "offset": [
        10705,
        10773
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1052": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1054": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1056": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1058": {
      "op": "SHL"
    },
    "1059": {
      "op": "SUB"
    },
    "1060": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10802
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 18
    },
    "1061": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10802
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1062": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10802
      ],
      "op": "AND",
      "path": "2"
    },
    "1063": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10802
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1065": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10802
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1066": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10802
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1067": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10802
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1068": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10795
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1070": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10802
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1072": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10802
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1073": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10802
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1074": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10802
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1075": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10802
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1077": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10802
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1078": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10802
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1079": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10802
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1080": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10811
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "1081": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10811
      ],
      "op": "DUP8",
      "path": "2"
    },
    "1082": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10811
      ],
      "op": "AND",
      "path": "2"
    },
    "1083": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10811
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1084": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10811
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1085": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10811
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1086": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10811
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "1087": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10811
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1088": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10811
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1089": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10811
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1090": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10811
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1091": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10811
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1092": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10811
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1093": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10820
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1094": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10820
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1095": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10820
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1096": {
      "fn": "ERC20._approve",
      "offset": [
        10835,
        10867
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 19
    },
    "1097": {
      "fn": "ERC20._approve",
      "offset": [
        10835,
        10867
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1098": {
      "op": "DUP5"
    },
    "1099": {
      "op": "DUP2"
    },
    "1100": {
      "op": "MSTORE"
    },
    "1101": {
      "fn": "ERC20._approve",
      "offset": [
        10835,
        10867
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "1134": {
      "fn": "ERC20._approve",
      "offset": [
        10835,
        10867
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1135": {
      "op": "ADD"
    },
    "1136": {
      "fn": "ERC20._approve",
      "offset": [
        10835,
        10867
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1138": {
      "fn": "ERC20._approve",
      "offset": [
        10835,
        10867
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1139": {
      "fn": "ERC20._approve",
      "offset": [
        10835,
        10867
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1140": {
      "fn": "ERC20._approve",
      "offset": [
        10835,
        10867
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1141": {
      "fn": "ERC20._approve",
      "offset": [
        10835,
        10867
      ],
      "op": "SUB",
      "path": "2"
    },
    "1142": {
      "fn": "ERC20._approve",
      "offset": [
        10835,
        10867
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1143": {
      "fn": "ERC20._approve",
      "offset": [
        10835,
        10867
      ],
      "op": "LOG3",
      "path": "2"
    },
    "1144": {
      "fn": "ERC20._approve",
      "offset": [
        10504,
        10874
      ],
      "op": "POP",
      "path": "2"
    },
    "1145": {
      "fn": "ERC20._approve",
      "offset": [
        10504,
        10874
      ],
      "op": "POP",
      "path": "2"
    },
    "1146": {
      "fn": "ERC20._approve",
      "offset": [
        10504,
        10874
      ],
      "op": "POP",
      "path": "2"
    },
    "1147": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        10504,
        10874
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1148": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11155,
        11596
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1149": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11285,
        11309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1151": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11312,
        11337
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x488"
    },
    "1154": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11322,
        11327
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1155": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11329,
        11336
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1156": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11312,
        11321
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x32D"
    },
    "1159": {
      "fn": "ERC20._spendAllowance",
      "jump": "i",
      "offset": [
        11312,
        11337
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1160": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11312,
        11337
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1161": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11285,
        11337
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1162": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11285,
        11337
      ],
      "op": "POP",
      "path": "2"
    },
    "1163": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1165": {
      "op": "NOT"
    },
    "1166": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11351,
        11367
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1167": {
      "branch": 32,
      "fn": "ERC20._spendAllowance",
      "offset": [
        11351,
        11388
      ],
      "op": "EQ",
      "path": "2"
    },
    "1168": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11347,
        11590
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4F0"
    },
    "1171": {
      "branch": 32,
      "fn": "ERC20._spendAllowance",
      "offset": [
        11347,
        11590
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1172": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11432,
        11438
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 20
    },
    "1173": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11412,
        11428
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1174": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11412,
        11438
      ],
      "op": "LT",
      "path": "2"
    },
    "1175": {
      "branch": 33,
      "fn": "ERC20._spendAllowance",
      "offset": [
        11412,
        11438
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1176": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11404,
        11472
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4E3"
    },
    "1179": {
      "branch": 33,
      "fn": "ERC20._spendAllowance",
      "offset": [
        11404,
        11472
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1180": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11404,
        11472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1182": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11404,
        11472
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1183": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1187": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1189": {
      "op": "SHL"
    },
    "1190": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11404,
        11472
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1191": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11404,
        11472
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1192": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1194": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11404,
        11472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1196": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11404,
        11472
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1197": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11404,
        11472
      ],
      "op": "ADD",
      "path": "2"
    },
    "1198": {
      "op": "MSTORE"
    },
    "1199": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "1201": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1203": {
      "op": "DUP3"
    },
    "1204": {
      "op": "ADD"
    },
    "1205": {
      "op": "MSTORE"
    },
    "1206": {
      "op": "PUSH32",
      "value": "0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
    },
    "1239": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1241": {
      "op": "DUP3"
    },
    "1242": {
      "op": "ADD"
    },
    "1243": {
      "op": "MSTORE"
    },
    "1244": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1246": {
      "op": "ADD"
    },
    "1247": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11404,
        11472
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x309"
    },
    "1250": {
      "op": "JUMP"
    },
    "1251": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11404,
        11472
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1252": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11514,
        11565
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 21,
      "value": "0x4F0"
    },
    "1255": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11523,
        11528
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1256": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11530,
        11537
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1257": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11558,
        11564
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1258": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11539,
        11555
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1259": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11539,
        11564
      ],
      "op": "SUB",
      "path": "2"
    },
    "1260": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11514,
        11522
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x358"
    },
    "1263": {
      "fn": "ERC20._spendAllowance",
      "jump": "i",
      "offset": [
        11514,
        11565
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1264": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11514,
        11565
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1265": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11275,
        11596
      ],
      "op": "POP",
      "path": "2"
    },
    "1266": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11155,
        11596
      ],
      "op": "POP",
      "path": "2"
    },
    "1267": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11155,
        11596
      ],
      "op": "POP",
      "path": "2"
    },
    "1268": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11155,
        11596
      ],
      "op": "POP",
      "path": "2"
    },
    "1269": {
      "fn": "ERC20._spendAllowance",
      "jump": "o",
      "offset": [
        11155,
        11596
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1270": {
      "fn": "ERC20._transfer",
      "offset": [
        7473,
        8291
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1271": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1273": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1275": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1277": {
      "op": "SHL"
    },
    "1278": {
      "op": "SUB"
    },
    "1279": {
      "fn": "ERC20._transfer",
      "offset": [
        7599,
        7617
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 22
    },
    "1280": {
      "branch": 34,
      "fn": "ERC20._transfer",
      "offset": [
        7599,
        7617
      ],
      "op": "AND",
      "path": "2"
    },
    "1281": {
      "fn": "ERC20._transfer",
      "offset": [
        7591,
        7659
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x55A"
    },
    "1284": {
      "branch": 34,
      "fn": "ERC20._transfer",
      "offset": [
        7591,
        7659
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1285": {
      "fn": "ERC20._transfer",
      "offset": [
        7591,
        7659
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1287": {
      "fn": "ERC20._transfer",
      "offset": [
        7591,
        7659
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1288": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1292": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1294": {
      "op": "SHL"
    },
    "1295": {
      "fn": "ERC20._transfer",
      "offset": [
        7591,
        7659
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1296": {
      "fn": "ERC20._transfer",
      "offset": [
        7591,
        7659
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1297": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1299": {
      "fn": "ERC20._transfer",
      "offset": [
        7591,
        7659
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1301": {
      "fn": "ERC20._transfer",
      "offset": [
        7591,
        7659
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1302": {
      "fn": "ERC20._transfer",
      "offset": [
        7591,
        7659
      ],
      "op": "ADD",
      "path": "2"
    },
    "1303": {
      "op": "MSTORE"
    },
    "1304": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "1306": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1308": {
      "op": "DUP3"
    },
    "1309": {
      "op": "ADD"
    },
    "1310": {
      "op": "MSTORE"
    },
    "1311": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E736665722066726F6D20746865207A65726F206164"
    },
    "1344": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1346": {
      "op": "DUP3"
    },
    "1347": {
      "op": "ADD"
    },
    "1348": {
      "op": "MSTORE"
    },
    "1349": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "1355": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "1357": {
      "op": "SHL"
    },
    "1358": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1360": {
      "op": "DUP3"
    },
    "1361": {
      "op": "ADD"
    },
    "1362": {
      "op": "MSTORE"
    },
    "1363": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1365": {
      "op": "ADD"
    },
    "1366": {
      "fn": "ERC20._transfer",
      "offset": [
        7591,
        7659
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x309"
    },
    "1369": {
      "op": "JUMP"
    },
    "1370": {
      "fn": "ERC20._transfer",
      "offset": [
        7591,
        7659
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1371": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1373": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1375": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1377": {
      "op": "SHL"
    },
    "1378": {
      "op": "SUB"
    },
    "1379": {
      "fn": "ERC20._transfer",
      "offset": [
        7677,
        7693
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 23
    },
    "1380": {
      "branch": 35,
      "fn": "ERC20._transfer",
      "offset": [
        7677,
        7693
      ],
      "op": "AND",
      "path": "2"
    },
    "1381": {
      "fn": "ERC20._transfer",
      "offset": [
        7669,
        7733
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5BC"
    },
    "1384": {
      "branch": 35,
      "fn": "ERC20._transfer",
      "offset": [
        7669,
        7733
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1385": {
      "fn": "ERC20._transfer",
      "offset": [
        7669,
        7733
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1387": {
      "fn": "ERC20._transfer",
      "offset": [
        7669,
        7733
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1388": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1392": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1394": {
      "op": "SHL"
    },
    "1395": {
      "fn": "ERC20._transfer",
      "offset": [
        7669,
        7733
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1396": {
      "fn": "ERC20._transfer",
      "offset": [
        7669,
        7733
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1397": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1399": {
      "fn": "ERC20._transfer",
      "offset": [
        7669,
        7733
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1401": {
      "fn": "ERC20._transfer",
      "offset": [
        7669,
        7733
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1402": {
      "fn": "ERC20._transfer",
      "offset": [
        7669,
        7733
      ],
      "op": "ADD",
      "path": "2"
    },
    "1403": {
      "op": "MSTORE"
    },
    "1404": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "1406": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1408": {
      "op": "DUP3"
    },
    "1409": {
      "op": "ADD"
    },
    "1410": {
      "op": "MSTORE"
    },
    "1411": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220746F20746865207A65726F2061646472"
    },
    "1444": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1446": {
      "op": "DUP3"
    },
    "1447": {
      "op": "ADD"
    },
    "1448": {
      "op": "MSTORE"
    },
    "1449": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "1453": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "1455": {
      "op": "SHL"
    },
    "1456": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1458": {
      "op": "DUP3"
    },
    "1459": {
      "op": "ADD"
    },
    "1460": {
      "op": "MSTORE"
    },
    "1461": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1463": {
      "op": "ADD"
    },
    "1464": {
      "fn": "ERC20._transfer",
      "offset": [
        7669,
        7733
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x309"
    },
    "1467": {
      "op": "JUMP"
    },
    "1468": {
      "fn": "ERC20._transfer",
      "offset": [
        7669,
        7733
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1473": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1475": {
      "op": "SHL"
    },
    "1476": {
      "op": "SUB"
    },
    "1477": {
      "fn": "ERC20._transfer",
      "offset": [
        7815,
        7830
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1478": {
      "fn": "ERC20._transfer",
      "offset": [
        7815,
        7830
      ],
      "op": "AND",
      "path": "2"
    },
    "1479": {
      "fn": "ERC20._transfer",
      "offset": [
        7793,
        7812
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1481": {
      "fn": "ERC20._transfer",
      "offset": [
        7815,
        7830
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1482": {
      "fn": "ERC20._transfer",
      "offset": [
        7815,
        7830
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1483": {
      "fn": "ERC20._transfer",
      "offset": [
        7815,
        7830
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1484": {
      "fn": "ERC20._transfer",
      "offset": [
        7815,
        7830
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1486": {
      "fn": "ERC20._transfer",
      "offset": [
        7815,
        7830
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1487": {
      "fn": "ERC20._transfer",
      "offset": [
        7815,
        7830
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1488": {
      "fn": "ERC20._transfer",
      "offset": [
        7815,
        7830
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1489": {
      "fn": "ERC20._transfer",
      "offset": [
        7815,
        7830
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1491": {
      "fn": "ERC20._transfer",
      "offset": [
        7815,
        7830
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1492": {
      "fn": "ERC20._transfer",
      "offset": [
        7815,
        7830
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1493": {
      "fn": "ERC20._transfer",
      "offset": [
        7815,
        7830
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1494": {
      "fn": "ERC20._transfer",
      "offset": [
        7848,
        7869
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 24
    },
    "1495": {
      "fn": "ERC20._transfer",
      "offset": [
        7848,
        7869
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1496": {
      "fn": "ERC20._transfer",
      "offset": [
        7848,
        7869
      ],
      "op": "LT",
      "path": "2"
    },
    "1497": {
      "branch": 36,
      "fn": "ERC20._transfer",
      "offset": [
        7848,
        7869
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1498": {
      "fn": "ERC20._transfer",
      "offset": [
        7840,
        7912
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x634"
    },
    "1501": {
      "branch": 36,
      "fn": "ERC20._transfer",
      "offset": [
        7840,
        7912
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1502": {
      "fn": "ERC20._transfer",
      "offset": [
        7840,
        7912
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1504": {
      "fn": "ERC20._transfer",
      "offset": [
        7840,
        7912
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1505": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1509": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1511": {
      "op": "SHL"
    },
    "1512": {
      "fn": "ERC20._transfer",
      "offset": [
        7840,
        7912
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1513": {
      "fn": "ERC20._transfer",
      "offset": [
        7840,
        7912
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1514": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1516": {
      "fn": "ERC20._transfer",
      "offset": [
        7840,
        7912
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1518": {
      "fn": "ERC20._transfer",
      "offset": [
        7840,
        7912
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1519": {
      "fn": "ERC20._transfer",
      "offset": [
        7840,
        7912
      ],
      "op": "ADD",
      "path": "2"
    },
    "1520": {
      "op": "MSTORE"
    },
    "1521": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "1523": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1525": {
      "op": "DUP3"
    },
    "1526": {
      "op": "ADD"
    },
    "1527": {
      "op": "MSTORE"
    },
    "1528": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732062"
    },
    "1561": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1563": {
      "op": "DUP3"
    },
    "1564": {
      "op": "ADD"
    },
    "1565": {
      "op": "MSTORE"
    },
    "1566": {
      "op": "PUSH6",
      "value": "0x616C616E6365"
    },
    "1573": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "1575": {
      "op": "SHL"
    },
    "1576": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1578": {
      "op": "DUP3"
    },
    "1579": {
      "op": "ADD"
    },
    "1580": {
      "op": "MSTORE"
    },
    "1581": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1583": {
      "op": "ADD"
    },
    "1584": {
      "fn": "ERC20._transfer",
      "offset": [
        7840,
        7912
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x309"
    },
    "1587": {
      "op": "JUMP"
    },
    "1588": {
      "fn": "ERC20._transfer",
      "offset": [
        7840,
        7912
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1589": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1593": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1595": {
      "op": "SHL"
    },
    "1596": {
      "op": "SUB"
    },
    "1597": {
      "fn": "ERC20._transfer",
      "offset": [
        7946,
        7961
      ],
      "op": "DUP5",
      "path": "2",
      "statement": 25
    },
    "1598": {
      "fn": "ERC20._transfer",
      "offset": [
        7946,
        7961
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1599": {
      "fn": "ERC20._transfer",
      "offset": [
        7946,
        7961
      ],
      "op": "AND",
      "path": "2"
    },
    "1600": {
      "fn": "ERC20._transfer",
      "offset": [
        7946,
        7955
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1602": {
      "fn": "ERC20._transfer",
      "offset": [
        7946,
        7961
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1603": {
      "fn": "ERC20._transfer",
      "offset": [
        7946,
        7961
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1604": {
      "fn": "ERC20._transfer",
      "offset": [
        7946,
        7961
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1605": {
      "fn": "ERC20._transfer",
      "offset": [
        7946,
        7961
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1607": {
      "fn": "ERC20._transfer",
      "offset": [
        7946,
        7961
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1608": {
      "fn": "ERC20._transfer",
      "offset": [
        7946,
        7961
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1609": {
      "fn": "ERC20._transfer",
      "offset": [
        7946,
        7961
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1610": {
      "fn": "ERC20._transfer",
      "offset": [
        7946,
        7961
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1612": {
      "fn": "ERC20._transfer",
      "offset": [
        7946,
        7961
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1613": {
      "fn": "ERC20._transfer",
      "offset": [
        7946,
        7961
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1614": {
      "fn": "ERC20._transfer",
      "offset": [
        7946,
        7961
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1615": {
      "fn": "ERC20._transfer",
      "offset": [
        7964,
        7984
      ],
      "op": "DUP8",
      "path": "2"
    },
    "1616": {
      "fn": "ERC20._transfer",
      "offset": [
        7964,
        7984
      ],
      "op": "DUP8",
      "path": "2"
    },
    "1617": {
      "fn": "ERC20._transfer",
      "offset": [
        7964,
        7984
      ],
      "op": "SUB",
      "path": "2"
    },
    "1618": {
      "fn": "ERC20._transfer",
      "offset": [
        7946,
        7984
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1619": {
      "fn": "ERC20._transfer",
      "offset": [
        7946,
        7984
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1620": {
      "fn": "ERC20._transfer",
      "offset": [
        8161,
        8174
      ],
      "op": "SWAP4",
      "path": "2",
      "statement": 26
    },
    "1621": {
      "fn": "ERC20._transfer",
      "offset": [
        8161,
        8174
      ],
      "op": "DUP8",
      "path": "2"
    },
    "1622": {
      "fn": "ERC20._transfer",
      "offset": [
        8161,
        8174
      ],
      "op": "AND",
      "path": "2"
    },
    "1623": {
      "fn": "ERC20._transfer",
      "offset": [
        8161,
        8174
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1624": {
      "fn": "ERC20._transfer",
      "offset": [
        8161,
        8174
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1625": {
      "fn": "ERC20._transfer",
      "offset": [
        8161,
        8174
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1626": {
      "fn": "ERC20._transfer",
      "offset": [
        8161,
        8174
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1627": {
      "fn": "ERC20._transfer",
      "offset": [
        8161,
        8174
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1628": {
      "fn": "ERC20._transfer",
      "offset": [
        8161,
        8174
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1629": {
      "fn": "ERC20._transfer",
      "offset": [
        8161,
        8174
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1630": {
      "fn": "ERC20._transfer",
      "offset": [
        8161,
        8184
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1631": {
      "fn": "ERC20._transfer",
      "offset": [
        8161,
        8184
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1632": {
      "fn": "ERC20._transfer",
      "offset": [
        8161,
        8184
      ],
      "op": "DUP8",
      "path": "2"
    },
    "1633": {
      "fn": "ERC20._transfer",
      "offset": [
        8161,
        8184
      ],
      "op": "ADD",
      "path": "2"
    },
    "1634": {
      "fn": "ERC20._transfer",
      "offset": [
        8161,
        8184
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1635": {
      "fn": "ERC20._transfer",
      "offset": [
        8161,
        8184
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1636": {
      "fn": "ERC20._transfer",
      "offset": [
        8210,
        8236
      ],
      "op": "SWAP3",
      "path": "2",
      "statement": 27
    },
    "1637": {
      "fn": "ERC20._transfer",
      "offset": [
        8210,
        8236
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1638": {
      "op": "DUP6"
    },
    "1639": {
      "op": "DUP2"
    },
    "1640": {
      "op": "MSTORE"
    },
    "1641": {
      "fn": "ERC20._transfer",
      "offset": [
        8161,
        8174
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1642": {
      "fn": "ERC20._transfer",
      "offset": [
        8161,
        8174
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1643": {
      "fn": "ERC20._transfer",
      "offset": [
        8210,
        8236
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "1676": {
      "fn": "ERC20._transfer",
      "offset": [
        8210,
        8236
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1677": {
      "op": "ADD"
    },
    "1678": {
      "fn": "ERC20._transfer",
      "offset": [
        8210,
        8236
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1680": {
      "fn": "ERC20._transfer",
      "offset": [
        8210,
        8236
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1681": {
      "fn": "ERC20._transfer",
      "offset": [
        8210,
        8236
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1682": {
      "fn": "ERC20._transfer",
      "offset": [
        8210,
        8236
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1683": {
      "fn": "ERC20._transfer",
      "offset": [
        8210,
        8236
      ],
      "op": "SUB",
      "path": "2"
    },
    "1684": {
      "fn": "ERC20._transfer",
      "offset": [
        8210,
        8236
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1685": {
      "fn": "ERC20._transfer",
      "offset": [
        8210,
        8236
      ],
      "op": "LOG3",
      "path": "2"
    },
    "1686": {
      "fn": "ERC20._transfer",
      "offset": [
        8247,
        8284
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 28,
      "value": "0x4F0"
    },
    "1689": {
      "fn": "ERC20._beforeTokenTransfer",
      "offset": [
        12180,
        12301
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1690": {
      "op": "JUMPDEST"
    },
    "1691": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1693": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1695": {
      "op": "DUP1"
    },
    "1696": {
      "op": "DUP4"
    },
    "1697": {
      "op": "MSTORE"
    },
    "1698": {
      "op": "DUP4"
    },
    "1699": {
      "op": "MLOAD"
    },
    "1700": {
      "op": "DUP1"
    },
    "1701": {
      "op": "DUP3"
    },
    "1702": {
      "op": "DUP6"
    },
    "1703": {
      "op": "ADD"
    },
    "1704": {
      "op": "MSTORE"
    },
    "1705": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1707": {
      "op": "JUMPDEST"
    },
    "1708": {
      "op": "DUP2"
    },
    "1709": {
      "op": "DUP2"
    },
    "1710": {
      "op": "LT"
    },
    "1711": {
      "op": "ISZERO"
    },
    "1712": {
      "op": "PUSH2",
      "value": "0x6C7"
    },
    "1715": {
      "op": "JUMPI"
    },
    "1716": {
      "op": "DUP6"
    },
    "1717": {
      "op": "DUP2"
    },
    "1718": {
      "op": "ADD"
    },
    "1719": {
      "op": "DUP4"
    },
    "1720": {
      "op": "ADD"
    },
    "1721": {
      "op": "MLOAD"
    },
    "1722": {
      "op": "DUP6"
    },
    "1723": {
      "op": "DUP3"
    },
    "1724": {
      "op": "ADD"
    },
    "1725": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1727": {
      "op": "ADD"
    },
    "1728": {
      "op": "MSTORE"
    },
    "1729": {
      "op": "DUP3"
    },
    "1730": {
      "op": "ADD"
    },
    "1731": {
      "op": "PUSH2",
      "value": "0x6AB"
    },
    "1734": {
      "op": "JUMP"
    },
    "1735": {
      "op": "JUMPDEST"
    },
    "1736": {
      "op": "DUP2"
    },
    "1737": {
      "op": "DUP2"
    },
    "1738": {
      "op": "GT"
    },
    "1739": {
      "op": "ISZERO"
    },
    "1740": {
      "op": "PUSH2",
      "value": "0x6D9"
    },
    "1743": {
      "op": "JUMPI"
    },
    "1744": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1746": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1748": {
      "op": "DUP4"
    },
    "1749": {
      "op": "DUP8"
    },
    "1750": {
      "op": "ADD"
    },
    "1751": {
      "op": "ADD"
    },
    "1752": {
      "op": "MSTORE"
    },
    "1753": {
      "op": "JUMPDEST"
    },
    "1754": {
      "op": "POP"
    },
    "1755": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1757": {
      "op": "ADD"
    },
    "1758": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1760": {
      "op": "NOT"
    },
    "1761": {
      "op": "AND"
    },
    "1762": {
      "op": "SWAP3"
    },
    "1763": {
      "op": "SWAP1"
    },
    "1764": {
      "op": "SWAP3"
    },
    "1765": {
      "op": "ADD"
    },
    "1766": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1768": {
      "op": "ADD"
    },
    "1769": {
      "op": "SWAP4"
    },
    "1770": {
      "op": "SWAP3"
    },
    "1771": {
      "op": "POP"
    },
    "1772": {
      "op": "POP"
    },
    "1773": {
      "op": "POP"
    },
    "1774": {
      "jump": "o",
      "op": "JUMP"
    },
    "1775": {
      "op": "JUMPDEST"
    },
    "1776": {
      "op": "DUP1"
    },
    "1777": {
      "op": "CALLDATALOAD"
    },
    "1778": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1780": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1782": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1784": {
      "op": "SHL"
    },
    "1785": {
      "op": "SUB"
    },
    "1786": {
      "op": "DUP2"
    },
    "1787": {
      "op": "AND"
    },
    "1788": {
      "op": "DUP2"
    },
    "1789": {
      "op": "EQ"
    },
    "1790": {
      "op": "PUSH2",
      "value": "0x706"
    },
    "1793": {
      "op": "JUMPI"
    },
    "1794": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1796": {
      "op": "DUP1"
    },
    "1797": {
      "op": "REVERT"
    },
    "1798": {
      "op": "JUMPDEST"
    },
    "1799": {
      "op": "SWAP2"
    },
    "1800": {
      "op": "SWAP1"
    },
    "1801": {
      "op": "POP"
    },
    "1802": {
      "jump": "o",
      "op": "JUMP"
    },
    "1803": {
      "op": "JUMPDEST"
    },
    "1804": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1806": {
      "op": "DUP1"
    },
    "1807": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1809": {
      "op": "DUP4"
    },
    "1810": {
      "op": "DUP6"
    },
    "1811": {
      "op": "SUB"
    },
    "1812": {
      "op": "SLT"
    },
    "1813": {
      "op": "ISZERO"
    },
    "1814": {
      "op": "PUSH2",
      "value": "0x71E"
    },
    "1817": {
      "op": "JUMPI"
    },
    "1818": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1820": {
      "op": "DUP1"
    },
    "1821": {
      "op": "REVERT"
    },
    "1822": {
      "op": "JUMPDEST"
    },
    "1823": {
      "op": "PUSH2",
      "value": "0x727"
    },
    "1826": {
      "op": "DUP4"
    },
    "1827": {
      "op": "PUSH2",
      "value": "0x6EF"
    },
    "1830": {
      "jump": "i",
      "op": "JUMP"
    },
    "1831": {
      "op": "JUMPDEST"
    },
    "1832": {
      "op": "SWAP5"
    },
    "1833": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1835": {
      "op": "SWAP4"
    },
    "1836": {
      "op": "SWAP1"
    },
    "1837": {
      "op": "SWAP4"
    },
    "1838": {
      "op": "ADD"
    },
    "1839": {
      "op": "CALLDATALOAD"
    },
    "1840": {
      "op": "SWAP4"
    },
    "1841": {
      "op": "POP"
    },
    "1842": {
      "op": "POP"
    },
    "1843": {
      "op": "POP"
    },
    "1844": {
      "jump": "o",
      "op": "JUMP"
    },
    "1845": {
      "op": "JUMPDEST"
    },
    "1846": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1848": {
      "op": "DUP1"
    },
    "1849": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1851": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1853": {
      "op": "DUP5"
    },
    "1854": {
      "op": "DUP7"
    },
    "1855": {
      "op": "SUB"
    },
    "1856": {
      "op": "SLT"
    },
    "1857": {
      "op": "ISZERO"
    },
    "1858": {
      "op": "PUSH2",
      "value": "0x74A"
    },
    "1861": {
      "op": "JUMPI"
    },
    "1862": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1864": {
      "op": "DUP1"
    },
    "1865": {
      "op": "REVERT"
    },
    "1866": {
      "op": "JUMPDEST"
    },
    "1867": {
      "op": "PUSH2",
      "value": "0x753"
    },
    "1870": {
      "op": "DUP5"
    },
    "1871": {
      "op": "PUSH2",
      "value": "0x6EF"
    },
    "1874": {
      "jump": "i",
      "op": "JUMP"
    },
    "1875": {
      "op": "JUMPDEST"
    },
    "1876": {
      "op": "SWAP3"
    },
    "1877": {
      "op": "POP"
    },
    "1878": {
      "op": "PUSH2",
      "value": "0x761"
    },
    "1881": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1883": {
      "op": "DUP6"
    },
    "1884": {
      "op": "ADD"
    },
    "1885": {
      "op": "PUSH2",
      "value": "0x6EF"
    },
    "1888": {
      "jump": "i",
      "op": "JUMP"
    },
    "1889": {
      "op": "JUMPDEST"
    },
    "1890": {
      "op": "SWAP2"
    },
    "1891": {
      "op": "POP"
    },
    "1892": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1894": {
      "op": "DUP5"
    },
    "1895": {
      "op": "ADD"
    },
    "1896": {
      "op": "CALLDATALOAD"
    },
    "1897": {
      "op": "SWAP1"
    },
    "1898": {
      "op": "POP"
    },
    "1899": {
      "op": "SWAP3"
    },
    "1900": {
      "op": "POP"
    },
    "1901": {
      "op": "SWAP3"
    },
    "1902": {
      "op": "POP"
    },
    "1903": {
      "op": "SWAP3"
    },
    "1904": {
      "jump": "o",
      "op": "JUMP"
    },
    "1905": {
      "op": "JUMPDEST"
    },
    "1906": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1908": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1910": {
      "op": "DUP3"
    },
    "1911": {
      "op": "DUP5"
    },
    "1912": {
      "op": "SUB"
    },
    "1913": {
      "op": "SLT"
    },
    "1914": {
      "op": "ISZERO"
    },
    "1915": {
      "op": "PUSH2",
      "value": "0x783"
    },
    "1918": {
      "op": "JUMPI"
    },
    "1919": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1921": {
      "op": "DUP1"
    },
    "1922": {
      "op": "REVERT"
    },
    "1923": {
      "op": "JUMPDEST"
    },
    "1924": {
      "op": "PUSH2",
      "value": "0x78C"
    },
    "1927": {
      "op": "DUP3"
    },
    "1928": {
      "op": "PUSH2",
      "value": "0x6EF"
    },
    "1931": {
      "jump": "i",
      "op": "JUMP"
    },
    "1932": {
      "op": "JUMPDEST"
    },
    "1933": {
      "op": "SWAP4"
    },
    "1934": {
      "op": "SWAP3"
    },
    "1935": {
      "op": "POP"
    },
    "1936": {
      "op": "POP"
    },
    "1937": {
      "op": "POP"
    },
    "1938": {
      "jump": "o",
      "op": "JUMP"
    },
    "1939": {
      "op": "JUMPDEST"
    },
    "1940": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1942": {
      "op": "DUP1"
    },
    "1943": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1945": {
      "op": "DUP4"
    },
    "1946": {
      "op": "DUP6"
    },
    "1947": {
      "op": "SUB"
    },
    "1948": {
      "op": "SLT"
    },
    "1949": {
      "op": "ISZERO"
    },
    "1950": {
      "op": "PUSH2",
      "value": "0x7A6"
    },
    "1953": {
      "op": "JUMPI"
    },
    "1954": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1956": {
      "op": "DUP1"
    },
    "1957": {
      "op": "REVERT"
    },
    "1958": {
      "op": "JUMPDEST"
    },
    "1959": {
      "op": "PUSH2",
      "value": "0x7AF"
    },
    "1962": {
      "op": "DUP4"
    },
    "1963": {
      "op": "PUSH2",
      "value": "0x6EF"
    },
    "1966": {
      "jump": "i",
      "op": "JUMP"
    },
    "1967": {
      "op": "JUMPDEST"
    },
    "1968": {
      "op": "SWAP2"
    },
    "1969": {
      "op": "POP"
    },
    "1970": {
      "op": "PUSH2",
      "value": "0x7BD"
    },
    "1973": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1975": {
      "op": "DUP5"
    },
    "1976": {
      "op": "ADD"
    },
    "1977": {
      "op": "PUSH2",
      "value": "0x6EF"
    },
    "1980": {
      "jump": "i",
      "op": "JUMP"
    },
    "1981": {
      "op": "JUMPDEST"
    },
    "1982": {
      "op": "SWAP1"
    },
    "1983": {
      "op": "POP"
    },
    "1984": {
      "op": "SWAP3"
    },
    "1985": {
      "op": "POP"
    },
    "1986": {
      "op": "SWAP3"
    },
    "1987": {
      "op": "SWAP1"
    },
    "1988": {
      "op": "POP"
    },
    "1989": {
      "jump": "o",
      "op": "JUMP"
    },
    "1990": {
      "op": "JUMPDEST"
    },
    "1991": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1993": {
      "op": "DUP2"
    },
    "1994": {
      "op": "DUP2"
    },
    "1995": {
      "op": "SHR"
    },
    "1996": {
      "op": "SWAP1"
    },
    "1997": {
      "op": "DUP3"
    },
    "1998": {
      "op": "AND"
    },
    "1999": {
      "op": "DUP1"
    },
    "2000": {
      "op": "PUSH2",
      "value": "0x7DA"
    },
    "2003": {
      "op": "JUMPI"
    },
    "2004": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "2006": {
      "op": "DUP3"
    },
    "2007": {
      "op": "AND"
    },
    "2008": {
      "op": "SWAP2"
    },
    "2009": {
      "op": "POP"
    },
    "2010": {
      "op": "JUMPDEST"
    },
    "2011": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2013": {
      "op": "DUP3"
    },
    "2014": {
      "op": "LT"
    },
    "2015": {
      "op": "DUP2"
    },
    "2016": {
      "op": "SUB"
    },
    "2017": {
      "op": "PUSH2",
      "value": "0x7FA"
    },
    "2020": {
      "op": "JUMPI"
    },
    "2021": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2026": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2028": {
      "op": "SHL"
    },
    "2029": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2031": {
      "op": "MSTORE"
    },
    "2032": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "2034": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2036": {
      "op": "MSTORE"
    },
    "2037": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2039": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2041": {
      "op": "REVERT"
    },
    "2042": {
      "op": "JUMPDEST"
    },
    "2043": {
      "op": "POP"
    },
    "2044": {
      "op": "SWAP2"
    },
    "2045": {
      "op": "SWAP1"
    },
    "2046": {
      "op": "POP"
    },
    "2047": {
      "jump": "o",
      "op": "JUMP"
    },
    "2048": {
      "op": "JUMPDEST"
    },
    "2049": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2051": {
      "op": "DUP3"
    },
    "2052": {
      "op": "NOT"
    },
    "2053": {
      "op": "DUP3"
    },
    "2054": {
      "op": "GT"
    },
    "2055": {
      "op": "ISZERO"
    },
    "2056": {
      "op": "PUSH2",
      "value": "0x821"
    },
    "2059": {
      "op": "JUMPI"
    },
    "2060": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2065": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2067": {
      "op": "SHL"
    },
    "2068": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2070": {
      "op": "MSTORE"
    },
    "2071": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2073": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2075": {
      "op": "MSTORE"
    },
    "2076": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2078": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2080": {
      "op": "REVERT"
    },
    "2081": {
      "op": "JUMPDEST"
    },
    "2082": {
      "op": "POP"
    },
    "2083": {
      "op": "ADD"
    },
    "2084": {
      "op": "SWAP1"
    },
    "2085": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "88ee5db718680555f1adec6b749080d6ae5aa919",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n",
  "sourceMap": "1401:11610:2:-:0;;;1976:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2042:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2065:17:2;;;;:7;;:17;;;;;:::i;:::-;;1976:113;;1401:11610;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1401:11610:2;;;-1:-1:-1;1401:11610:2;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:8;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:8;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:8;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:8:o;1036:562::-;1135:6;1143;1196:2;1184:9;1175:7;1171:23;1167:32;1164:52;;;1212:1;1209;1202:12;1164:52;1239:16;;-1:-1:-1;;;;;1304:14:8;;;1301:34;;;1331:1;1328;1321:12;1301:34;1354:61;1407:7;1398:6;1387:9;1383:22;1354:61;:::i;:::-;1344:71;;1461:2;1450:9;1446:18;1440:25;1424:41;;1490:2;1480:8;1477:16;1474:36;;;1506:1;1503;1496:12;1474:36;;1529:63;1584:7;1573:8;1562:9;1558:24;1529:63;:::i;:::-;1519:73;;;1036:562;;;;;:::o;1603:380::-;1682:1;1678:12;;;;1725;;;1746:61;;1800:4;1792:6;1788:17;1778:27;;1746:61;1853:2;1845:6;1842:14;1822:18;1819:38;1816:161;;1899:10;1894:3;1890:20;1887:1;1880:31;1934:4;1931:1;1924:15;1962:4;1959:1;1952:15;1816:161;;1603:380;;;:::o;:::-;1401:11610:2;;;;;;",
  "sourcePath": "/Users/rastabujo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC20/ERC20.sol",
  "type": "contract"
}